{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/about/index/v50.png","path":"about/index/v50.png","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/bg.css","path":"css/bg.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/loading-bar.css","path":"css/loading-bar.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/alipay.png","path":"img/alipay.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bronya01.jpg","path":"img/bronya01.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/bronya02.png","path":"img/bronya02.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/elysia.png","path":"img/elysia.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/elysia02.png","path":"img/elysia02.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/elysia03.jpg","path":"img/elysia03.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/elysia04.jpg","path":"img/elysia04.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/elysia05.jpg","path":"img/elysia05.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/wechat.png","path":"img/wechat.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/PX4仿真环境的搭建.md","hash":"aff15be8c450518b258a248c64406e1ad8182951","modified":1688382519167},{"_id":"source/about/index.md","hash":"771265026448a1c86678339c82e759247414d7a6","modified":1688382636550},{"_id":"source/_posts/QA01.md","hash":"7d84a2f9bf451626bf51d3558690a688d771db8c","modified":1688382542840},{"_id":"source/_posts/【飞控】01-安装、接线、连接地面站.md","hash":"aa8c06b35a4c93f017949c8226983f887a33b33e","modified":1688382431836},{"_id":"source/_posts/部署code-server让你在iPad上使用VScode.md","hash":"988535de45306b6b9aeab860b32cd32d6aa80437","modified":1688382497111},{"_id":"source/tags/index.md","hash":"df146f3a10df28b2ecb75ecb56e069b33057eec2","modified":1670253349684},{"_id":"source/categories/index.md","hash":"197d94947c7cf896beaf20d4d6b07bdf3e25af39","modified":1670253569646},{"_id":"source/about/index/v50.png","hash":"5e0e5c0756074c62ae968f132b231286414c9e5b","modified":1670260262014},{"_id":"themes/butterfly/README.md","hash":"5ca893c78f8971f512da55c785b8ccbfa9d37cfc","modified":1688546395258},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1670215957189},{"_id":"themes/butterfly/_config.yml","hash":"b684e7cc1100d22a59a13ec48d09b1eef0610e34","modified":1688546395260},{"_id":"themes/butterfly/package.json","hash":"a6a032654a36408d7b7274bc9cfe21f89946d29c","modified":1688546395305},{"_id":"themes/butterfly/plugins.yml","hash":"6d68dab3b79accb1bceb4710c8aaab724a45053a","modified":1688546395306},{"_id":"themes/butterfly/languages/default.yml","hash":"d444cbb5c5456aaf27f3fb1b4308634689c7bb53","modified":1688546395262},{"_id":"themes/butterfly/languages/en.yml","hash":"4957fd976c99745d3aa24000a85b2955e8d1cf81","modified":1688546395263},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1670215957193},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"cc8672dc0c2762b694f689cbeb6e34810f1c194e","modified":1688546395263},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"145ec301db185c8a06de1f34a77ca391e1d2729b","modified":1688546395264},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1670215957241},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1670215957194},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1670215957187},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1670215957241},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1670215957241},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1670215957242},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1670215957188},{"_id":"themes/butterfly/README_CN.md","hash":"f6ae7f38d016135340fd25c5fd1be65452b6773d","modified":1688546395260},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1670215957187},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1670215957188},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1670215957189},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1670215957195},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1670215957195},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"50eea5aa78cdeb6c72dd22f0aeabc407cc0f712e","modified":1688546395265},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"b50b0afdc41c54279587410c3f82c8cb3c5ff46d","modified":1688546395265},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"96df62e34661d8ca4a45267286127479e5178a79","modified":1688546395270},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1670215957248},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1670215957247},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"c5c58714fb3cb839653e5c32e6094784c8662935","modified":1688546395275},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"c55f05400eb27ab051f47396ec8d4249ce6f71ec","modified":1688546395275},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9277fead4c29dbe93976f078adaa26e8f9253da3","modified":1688546395276},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"8ff03b35385f9162e1eb54dceb5fa7f781306caf","modified":1688546395311},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"7222102f9919f8e961d4f1688425845fb7775ada","modified":1688546395312},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1670215957244},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"6005907245dd74b153f03afdccfae1abb66bb482","modified":1688546395313},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"76343ac8422c9c8539082e77eda6ffee4b877eb2","modified":1688546395314},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1688546395307},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"95479790234c291b064d031577d71214cdd1d820","modified":1688546395307},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1688546395308},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1688546395308},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1670215957246},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1670215957245},{"_id":"themes/butterfly/source/css/bg.css","hash":"5ad4294ec22b3598903c90bb6b4a7d06ee6dd2bf","modified":1670264177418},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1688546395328},{"_id":"themes/butterfly/source/css/var.styl","hash":"e1e37a2e932163886789b72624c7348545003f1d","modified":1688546395330},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a3323fcb11cfd3f3e21230737341beb5d76b40aa","modified":1688546395310},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1670215957250},{"_id":"themes/butterfly/source/css/loading-bar.css","hash":"09f68637c2abd48a7b6a69b8cd33baba407b65a2","modified":1670244457917},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1670215957251},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"b8d95ac1851c37f1dce4b1dd4a1d3ffdff501a03","modified":1688546395315},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1670215957251},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1670215957252},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1670215957252},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1670215957253},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1670215957253},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1670215957254},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"fc5a80707cf522378be3cf8638ef78bccc88c510","modified":1688546395315},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1670215957254},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1670215957276},{"_id":"themes/butterfly/source/img/alipay.png","hash":"54ed8c944c32e7b68527696a14a60b680e7c5965","modified":1670261039734},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1670215957277},{"_id":"themes/butterfly/source/img/elysia04.jpg","hash":"8f6ad0d3643cc3f0554638381a95cced8a07c7e1","modified":1670245141234},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1670215957278},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"a102a6cacf7b20183946a54580867a964f3674c4","modified":1688546395334},{"_id":"themes/butterfly/source/js/utils.js","hash":"13b2b02118a0f4ec2e9e0bb1b90f5b1a30a70f44","modified":1688546395335},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c7666a10448edd93f5ace37296051b7670495f1b","modified":1688546395266},{"_id":"themes/butterfly/source/js/main.js","hash":"4fd1cd7a02dedcb686caf6149c35fd8e1fbcafc9","modified":1688546395331},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"c8dbdfe6145a0bc6f7691c9551be8169a2698f0a","modified":1688546395266},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"f5207840c96df6b26ad227433babca4f8c362624","modified":1688546395267},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1670215957198},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1670215957198},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1670215957198},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"1bef867c799ba158c5417272fb137539951aa120","modified":1688546395268},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1670215957201},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fd55f0e09827ef40c53c48d184a553464aac3e03","modified":1688546395268},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1670215957199},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1670215957199},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"766baca6ddce49d1724a02312387b292ff2d0bdc","modified":1688546395271},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1670215957203},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"a6fde4835d6460ce7baf792fd5e1977fad73db25","modified":1688546395271},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"962ee70a35e60a13c31eea47d16b9f98069fe417","modified":1688546395269},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1670215957201},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"9155f01d4c644a2e19b2b13b2d3c6d5e34dd0abf","modified":1688546395272},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"7a641b5dd45b970e1dafd1433eb32ea149e55cf2","modified":1688546395269},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1670215957208},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1670215957205},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1670215957206},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e37681bc9c169d4220f26ecda2b3d5c02b6b9a0f","modified":1688546395273},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"3adb731465a4ab14529277fd7867889e0800ad16","modified":1688546395273},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"12be059c536490af216a397e8f2a7abbf6d4610e","modified":1688546395274},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1670215957208},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1670215957210},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1670215957224},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1670215957235},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1670215957230},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"82bb447a5d045980789cf3f9de9d49cc32011b13","modified":1688546395296},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1670215957230},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1670215957236},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"dfb5e16a7e7106bb20b2ac2d0df1251d0fc79609","modified":1688546395299},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1670215957236},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"ab037bf5794638bd30da4cf7cf106e5d03b5f696","modified":1688546395299},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1670215957237},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1670215957237},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"8e22f53886a57a68286970d8af8b4c950fd4a1d7","modified":1688546395300},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1670215957238},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1688546395300},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1688546395302},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1670215957240},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1670215957240},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"ba94ceb40d7c81372a76103d958dcc2cc6a84f00","modified":1688546395303},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"9893656128c347d1c09c90784627c84c979b326f","modified":1688546395317},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"431b4a252443e224872bd6b4f6aa76ed1679a82c","modified":1688546395317},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"3969f599e8657adf8c3ce287d83f5d0a23f276a9","modified":1688546395319},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1670215957259},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1670215957261},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"e43017dbc73e0ce95dcfcb9dfb4fcce0c1715dd4","modified":1688546395318},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1670215957261},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"5e27f7842af82ff7498d4b59787ce9ca90fa9e6f","modified":1688546395320},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"20303c0dad28e5c5335ce2fa6582f1fafae5b628","modified":1688546395321},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1670215957262},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1670215957262},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"fc029f5e00d7904c0878efd20dd4e09fc55e1d03","modified":1688546395321},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1670215957263},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1670215957264},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"9066a62e442affce3a923a06a90486bf9d364e0e","modified":1688546395323},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"824b2b2d2ee72583b9e009c0bb13e29e806534cc","modified":1688546395322},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1670215957264},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"15ea7564b2e3bf46bc91fb6e49c94d057b37caaf","modified":1688546395322},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"4c86c10f8ec0c8fb60b400a5a2f14699d3155be4","modified":1688546395323},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1670215957267},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1670215957267},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5dd1ba997741d02894ff846eda939ad8051c0bb2","modified":1688546395324},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"df7a51fcabbadab5aa31770e3202a47c9599bbb7","modified":1688546395325},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"37db99299af380e9111dce2a78a5049b301b13e0","modified":1688546395326},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1670215957269},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1670215957268},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0b23010154e19f37f0c4af0110f9f834d6d41a13","modified":1688546395326},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"cf90ea339fbb7f345212319627fcd68964024e40","modified":1688546395327},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"57d333ef47bfb8fd22da31f600527c9d91e8e322","modified":1688546395325},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"7c463ba25b3b54f0f46dfd75971d792816e942a8","modified":1688546395327},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1670215957271},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1670215957272},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1670215957272},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1670215957273},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1670215957273},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1670215957273},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1670215957274},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1670215957274},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"bbe930d8425bdaee2a5ba3cade42b617cee42934","modified":1688546395332},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"40e76d6da538cb3c1ef6b79ffc0adfa64fe6b8ba","modified":1688546395333},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1670215957275},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"0010c7a10d265c4329f0fd4db85b4a9ea7ba06b5","modified":1688546395276},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"58f37823f6cd9a194fb50f7ca7c2233e49939034","modified":1688546395277},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4b98145d6584d586cabf033493282afc72ae816a","modified":1688546395278},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1670215957211},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1670215957212},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"19b5cfa1f77781246e02967cefe149f19170e45f","modified":1688546395277},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1670215957212},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"08a85e52fc800d3562df869e5e2613313e76fce6","modified":1688546395280},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"7e233f872aea6fd6beccdc9efd86b1bf9ec9f12d","modified":1688546395279},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"0d960849d5b05d27ec87627b983ca35f2411b9e8","modified":1688546395281},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"c42bbce31fcd8846cf3360f4c383dec9368daeba","modified":1688546395279},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1670215957213},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"b47698e153c73cb29286b19bec5ddd920cb7ffba","modified":1688546395283},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"799da8f3015e6fe440681b21644bcb3810a5518c","modified":1688546395282},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"1157118db9f5d7c0c5a0fc7c346f6e934ca00d52","modified":1688546395281},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d40b521eec4136f6742c548a4445ed593470b1b","modified":1688546395283},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"f8b73bc63ec1b45d86aa3891d8c81ef4d5980943","modified":1688546395284},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"a56edeb1ce2f1b1fb0e866a30543f274b9f7d69e","modified":1688546395286},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"b19b123df682b23491b17dcca386d79062cd8f6e","modified":1688546395284},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"1a20b11fa0e6b1943e9b4d81e197a25ca36af66d","modified":1688546395285},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"7c7fbe27d82becc9ee509765f1195c69f5864a0b","modified":1688546395287},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"c5e131d65a7ad30f3cb98ac3b94cd2f6a94c22e9","modified":1688546395287},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f618457d62ef35d78a31e7fb1e375a462f64b228","modified":1688546395288},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1670215957221},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1670215957221},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"386a2b371644c2682560733617561ba6e6bf9ab2","modified":1688546395289},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4bb4cf58e219dfb8787273c931b1ea978b2ab88f","modified":1688546395289},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"6b0d28671afd5ed286a714f25ba16256a2e7d880","modified":1688546395290},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1670215957223},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1670215957224},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1670215957225},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"cfcfaed3a52fa47fff4cc65a053a2f025fb3b7b6","modified":1688546395291},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"da94966a9650ef3e4c69f3ee93758b30fa42cb78","modified":1688546395291},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"bb944185f4bb9f9a9b9d70ee215f66ccd6d4c6cf","modified":1688546395290},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"a6be932d1f64c6190f5d03b5b77fba09fa0fd6b8","modified":1688546395292},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"09d2ab2570b67e6f09244a898ccab5567cb82ace","modified":1688546395280},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1670215957228},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1688546395296},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"4fb998a05e51ef2302775945883307ee3039a544","modified":1688546395293},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"ba04174d977da988a1d49c06641262c413352346","modified":1688546395297},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"4f8bd22c5c32d5430cbe08ab4e861b6f8b86f820","modified":1688546395293},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"3adcf28a8d205ea3ee19828eda0e668702fac07a","modified":1688546395297},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"edd4ebf76a79fb74cfae03a286fab90f74324dbd","modified":1688546395294},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"4b9c35375e0eb9cf99ad246d5ca838eca64a635d","modified":1688546395298},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ce4ab79c85df9f77395269eb01e9a023d7f96376","modified":1688546395294},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"2f3af113713563e34b10bbe998cc15008f81c85a","modified":1688546395295},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1670215957257},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1670215957234},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1670215957258},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1670215957233},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1670215957234},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"8106bd031586f075a994956ee4438eb13be25d7b","modified":1688546395298},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1670215957258},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1670215957259},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1670215957259},{"_id":"themes/butterfly/source/img/wechat.png","hash":"5e0e5c0756074c62ae968f132b231286414c9e5b","modified":1670260201454},{"_id":"themes/butterfly/source/img/bronya01.jpg","hash":"37ade948c246b10ec94cda13fb44adb41c5d234f","modified":1670428948464},{"_id":"themes/butterfly/source/img/elysia05.jpg","hash":"dd3cd1e566b75ad5d6622b7c67229988b12a2060","modified":1670257733964},{"_id":"themes/butterfly/source/img/bronya02.png","hash":"a396213d056d0a07837cb4471eeae3e4d7d930a9","modified":1670429283681},{"_id":"themes/butterfly/source/img/elysia.png","hash":"b72e74f230e325e9a139c346d5fcccf961d9e072","modified":1660487784981},{"_id":"themes/butterfly/source/img/elysia02.png","hash":"969b14a1d2a0eb3c544cfc276ba5eb6e4ac03aca","modified":1670243484262},{"_id":"themes/butterfly/source/img/elysia03.jpg","hash":"aa9cef9baaecf2a61cffc452910f306e8f553bfb","modified":1660487898104},{"_id":"public/search.xml","hash":"fa0514a23a459b0d04da5e558d95fb3ffa7a24fa","modified":1688547451474},{"_id":"public/about/index.html","hash":"b4dcea39aea0bac9dc44cb2f180073039a6669a9","modified":1688547451474},{"_id":"public/tags/index.html","hash":"272e9ae79fdec8b173143cc26b3ab501319b6ef9","modified":1688547451474},{"_id":"public/categories/index.html","hash":"256e4dac6eef3aabba2423e3b6542057d92369a6","modified":1688547451474},{"_id":"public/2023/07/03/QA01/index.html","hash":"fb0590d9790759cc8c85339993caa01fc343e645","modified":1688547451474},{"_id":"public/2023/07/03/【飞控】01-安装、接线、连接地面站/index.html","hash":"f9c1daef9c98dd8caf54f044c82d34d94e78d964","modified":1688547451474},{"_id":"public/2022/12/07/部署code-server让你在iPad上使用VScode/index.html","hash":"286b73f51b6ea10beee8e891ad80bda23ac8549f","modified":1688547451474},{"_id":"public/2022/12/05/PX4仿真环境的搭建/index.html","hash":"a86a6522f0d42235c5c88b161a0644e37a00acab","modified":1688547451474},{"_id":"public/archives/index.html","hash":"506df9ac90f7c9903bd7b884970ed2c7098a6b8f","modified":1688547451474},{"_id":"public/archives/2022/index.html","hash":"ee1a505d889b52ae3c8aeb0c232093bca8dad156","modified":1688547451474},{"_id":"public/archives/2022/12/index.html","hash":"b86212a312ca1d84d39123ece86b38e0873c58bb","modified":1688547451474},{"_id":"public/archives/2023/index.html","hash":"b0be69e18ccda293d33b4765fe0e6f5fcd2bd92f","modified":1688547451474},{"_id":"public/archives/2023/07/index.html","hash":"f5e7216e25d95521ddfd46ef39f78c0786849f5a","modified":1688547451474},{"_id":"public/categories/南工御风/index.html","hash":"2308b8012b445d8187d6af4dcf349ef95b865522","modified":1688547451474},{"_id":"public/index.html","hash":"071e703d8dde4c8e5f572db320d17610f30b9421","modified":1688547451474},{"_id":"public/tags/px4/index.html","hash":"1b5be41beaaa6f92c5300213d1ff8c95c56a7c9c","modified":1688547451474},{"_id":"public/tags/ubuntu/index.html","hash":"0acbdeb720a84deaa72407341864aee5612562e9","modified":1688547451474},{"_id":"public/tags/docker/index.html","hash":"58b313e6881b906a28a67084df3691d5f0a2271a","modified":1688547451474},{"_id":"public/tags/mavsdk/index.html","hash":"1b010945650cddc21f2cf55b85a05b1d61db2d6c","modified":1688547451474},{"_id":"public/tags/yolo/index.html","hash":"2108a69aa1c2b52212779e297f790040cb8702c0","modified":1688547451474},{"_id":"public/tags/飞控/index.html","hash":"dcaa7d9974d9722f8a4045031bcf25c4322fafad","modified":1688547451474},{"_id":"public/tags/qgc/index.html","hash":"87c809714bbb8b9bb81a74d81a7b9a504c8defb1","modified":1688547451474},{"_id":"public/tags/云服务器/index.html","hash":"02e4d3db222383a55cc9f3bd382409e24bd709ad","modified":1688547451474},{"_id":"public/tags/code-server/index.html","hash":"8e968a7adad3923ae40a2afdf496b49814519a36","modified":1688547451474},{"_id":"public/img/alipay.png","hash":"54ed8c944c32e7b68527696a14a60b680e7c5965","modified":1688547451474},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1688547451474},{"_id":"public/img/elysia04.jpg","hash":"8f6ad0d3643cc3f0554638381a95cced8a07c7e1","modified":1688547451474},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1688547451474},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1688547451474},{"_id":"public/css/bg.css","hash":"bbaba41eb79221430b0c82fd96d856406d8e8dae","modified":1688547451474},{"_id":"public/css/loading-bar.css","hash":"09f68637c2abd48a7b6a69b8cd33baba407b65a2","modified":1688547451474},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1688547451474},{"_id":"public/css/index.css","hash":"d618297d4bfdcf1c77b405f7153aa90e6ba41297","modified":1688547451474},{"_id":"public/js/main.js","hash":"0227b5bd233a3c66582e0ee820cdb353ce52ece1","modified":1688547451474},{"_id":"public/about/index/v50.png","hash":"5e0e5c0756074c62ae968f132b231286414c9e5b","modified":1688547451474},{"_id":"public/img/wechat.png","hash":"5e0e5c0756074c62ae968f132b231286414c9e5b","modified":1688547451474},{"_id":"public/js/utils.js","hash":"aaaedc207440095da1ffabcad870fc2641befb0e","modified":1688547451474},{"_id":"public/js/search/algolia.js","hash":"fd86281d4f0f99ce173e49c1a0df3507fe268d37","modified":1688547451474},{"_id":"public/js/search/local-search.js","hash":"8509cbd954ee9e099dcfbbfdafba70893a56e9ae","modified":1688547451474},{"_id":"public/js/tw_cn.js","hash":"42b106354d72a0ea1fe62587b313a5b7de3cc393","modified":1688547451474},{"_id":"public/img/bronya01.jpg","hash":"37ade948c246b10ec94cda13fb44adb41c5d234f","modified":1688547451474},{"_id":"public/img/elysia05.jpg","hash":"dd3cd1e566b75ad5d6622b7c67229988b12a2060","modified":1688547451474},{"_id":"public/img/bronya02.png","hash":"a396213d056d0a07837cb4471eeae3e4d7d930a9","modified":1688547451474},{"_id":"public/img/elysia.png","hash":"b72e74f230e325e9a139c346d5fcccf961d9e072","modified":1688547451474},{"_id":"public/img/elysia02.png","hash":"969b14a1d2a0eb3c544cfc276ba5eb6e4ac03aca","modified":1688547451474},{"_id":"public/img/elysia03.jpg","hash":"aa9cef9baaecf2a61cffc452910f306e8f553bfb","modified":1688547451474}],"Category":[{"name":"南工御风","_id":"cljphk0v00004s0vn1u73g1ro"}],"Data":[],"Page":[{"title":"Donate","date":"2022-12-05T17:04:06.000Z","type":"about","_content":"\n\n\n- 如果你财力雄厚, 可以vivo50\n\n  {% inlineImg https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/5e0e5c0756074c62ae968f132b231286414c9e5b.png 150px %}\n","source":"about/index.md","raw":"---\ntitle: Donate\ndate: 2022-12-06 01:04:06\ntype: \"about\"\n---\n\n\n\n- 如果你财力雄厚, 可以vivo50\n\n  {% inlineImg https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/5e0e5c0756074c62ae968f132b231286414c9e5b.png 150px %}\n","updated":"2023-07-03T11:10:36.550Z","path":"about/index.html","comments":1,"layout":"page","_id":"cljphk0ut0000s0vn0epf9pu3","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><ul>\n<li>\n<p>如果你财力雄厚, 可以vivo50</p>\n<img class=\"inline-img\" src=\"https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/5e0e5c0756074c62ae968f132b231286414c9e5b.png\" style=\"height:150px\"/>\n</li>\n</ul>\n","site":{"data":{}},"cover":"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia03.jpg","cover_type":"img","excerpt":"","more":"<ul>\n<li>\n<p>如果你财力雄厚, 可以vivo50</p>\n<img class=\"inline-img\" src=\"https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/5e0e5c0756074c62ae968f132b231286414c9e5b.png\" style=\"height:150px\"/>\n</li>\n</ul>\n"},{"title":"tags","date":"2022-12-05T15:15:10.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-12-05 23:15:10\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-12-05T15:15:49.684Z","path":"tags/index.html","layout":"page","_id":"cljphk0uy0002s0vnb9wvcso9","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\">","site":{"data":{}},"cover":"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia03.jpg","cover_type":"img","excerpt":"","more":""},{"title":"categories","date":"2022-12-05T15:19:08.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-12-05 23:19:08\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-12-05T15:19:29.646Z","path":"categories/index.html","layout":"page","_id":"cljphk0v20006s0vn6jua2o3w","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\">","site":{"data":{}},"cover":"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia03.jpg","cover_type":"img","excerpt":"","more":""}],"Post":[{"title":"PX4仿真环境的搭建","date":"2022-12-05T13:24:35.000Z","top_img":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg","cover":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image.png","_content":"\n# 通过Docker搭建（比较推荐）\n\n> 优点: 搭建方便, 可以轻松地在windows系统上运行, 开发与调试可以同平台进行\n>\n> 缺点: 性能损耗大(需要较高性能), gazebo模拟器没有图形化界面(其实无关紧要)\n>\n> 该教程适用于win11 (我自己的环境), win10自行探索\n\n## 安装Docker Desktop for Windows\n\n### 准备工作\n\n1. 控制面板-程序和功能-启用或关闭Windows功能-勾选【适用于 Linux 的 Windows 子系统】和【虚拟机平台】这两项-立即重新启动；  \n\n### 安装WSL 2和Ubuntu20.04\n\n2. 点击[这里](https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package)前往微软官方文档Step 4, 下载[WSL2 Linux kernel update package for x64 machines](https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi)内核升级包并安装.  \n\n3. 设置WSL版本为WSL 2. 打开 PowerShell , 输入  \n\n   ```bash\n   wsl --set-default-version 2\n   ```\n\n   查看可用ubuntu版本  \n\n   ```bash\n   wsl --list --online\n   ```\n\n   安装  \n\n   ```bash\n   wsl --install -d Ubuntu-20.04\n   ```\n\n   安装结束后设置你的Ubuntu用户名和密码, 即可关闭这个界面.   \n\n### 安装Docker Desktop\n\n4. [官网下载](https://www.docker.com/get-started/), 然后双击运行安装即可.   \n\n5. 设置里勾选 基于WSL 2的引擎  \n\n   ![image-20221205215205499](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215205499.png)\n\n6. 在PowerShell中输入  \n\n   ```bash\n   wsl -l -v\n   ```\n\n   可以发现docker已经在运行  \n\n   ![image-20221205215448505](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215448505.png)\n\n\n## 安装PX4仿真镜像\n\n7. 打开Docker Desktop, 并搜索 `px4-gazebo-headless`, 点击Pull拉取镜像.   \n\n   ![image-20221205220006231](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220006231.png)\n\n8. 拉取成功后, 即可打开Ubuntu20.04, 运行  \n\n   ```bash\n   docker run --rm -it jonasvautherin/px4-gazebo-headless:latest -v plane \n   ```\n\n   > 该命令为在Broadcast模式下运行sitl仿真, 并使用固定翼模型. 在此配置中, 容器将 MAVLink 发送到端口 14550（对于 QGC）和 14540（例如 MAVSDK）上的主机.   \n\n   看到如下画面, 即代表px4 SITL仿真已成功启动  \n\n   ![image-20221205220551641](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220551641.png)\n\n   ![image-20221205220525084](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220525084.png)\n\n   打开QGC, 飞机即可自动连接  \n\n   ![image-20221205220648562](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220648562.png)\n\n   终端输入  \n\n   ```bash\n   shutdown\n   ```\n\n   即可结束仿真  \n\n   ![image-20221205221320196](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205221320196.png)\n\n# 自行搭建（一般推荐）\n\n> 优点: 性能较好, gazebo模拟器有图形化界面(无关紧要), 可以增加Linux基础, 不用docker可以享受自己配环境的乐趣  \n>\n> 缺点: 费时费力, 有docker为什么还要自己配环境()  \n>\n> 此教程基于ubuntu20.04 (我的环境), 如果你是ubuntu18.04也可以参考[这里](https://github.com/Nangong-Yufeng/flight-control/blob/main/PX4%E7%9B%B8%E5%85%B3/PX4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E8%BF%9B%E5%BA%A6.md). 或者你想[跟着PX4官方文档搭建环境](https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#ubuntu-lts-debian-linux-%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83)  \n>\n> 搭建环境时建议使用一个好用的梯子(既然你能看到这个文章说明这应该不是问题)  \n\n## ROS安装\n\n1. 首先安装ROS, 推荐使用[FishRos](https://fishros.org.cn/forum/topic/20/%E5%B0%8F%E9%B1%BC%E7%9A%84%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E7%B3%BB%E5%88%97?lang=zh-CN)  \n\n   ```bash\n   wget http://fishros.com/install -O fishros && . fishros \n   ```\n\n   分别选择1, 3, 4 (配置环境需要用到的)  \n\n   ![image-20221205222351336](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205222351336.png)\n\n## PX4安装\n\n2. 安装依赖\n\n   ```bash\n   sudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python-pip python3-pip\n   ```\n\n   ```bash\n   pip3 install pandas jinja2 pyserial cerberus pyulog==0.7.0 numpy toml pyquaternion empy pyyaml \n   ```\n\n   ```bash\n   pip3 install packaging numpy empy toml pyyaml jinja2 pyargparse\n   ```\n\n3. 创建工作空间\n\n   ```bash\n   sudo apt-get install python-catkin-tools\n   mkdir -p ~/catkin_ws/src\n   mkdir -p ~/catkin_ws/scripts\n   cd catkin_ws && catkin init # 使用catkin_make话，则为cd catkin_ws/src && catkin_init_workspace\n   ```\n\n4. 安装MAVROS\n\n   ```bash\n   sudo apt install ros-noetic-mavros ros-noetic-mavros-extras   \n   wget https://gitee.com/robin_shaun/XTDrone/raw/master/sitl_config/mavros/install_geographiclib_datasets.sh\n   sudo chmod a+x ./install_geographiclib_datasets.sh\n   sudo ./install_geographiclib_datasets.sh #这步需要装一段时间,请耐心等待PX4配置\n   ```\n\n5. 安装PX4\n\n   推荐[官方脚本](https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC)\n\n   ```bash\n   cd ~/catkin_ws\n   ```\n\n   ```bash\n   git clone https://github.com/PX4/PX4-Autopilot.git --recursive\n   ```\n\n   ```bash\n   bash ./PX4-Autopilot/Tools/setup/ubuntu.sh\n   ```\n\n   然后重启电脑\n\n6. 环境配置\n\n   打开一个终端, 输入\n\n   ```bash\n   sudo gedit ~/.bashrc\n   ```\n\n   将下面代码粘贴到里面\n\n   ```bash\n   source ~/catkin_ws/devel/setup.bash\n   source ~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/setup_gazebo.bash ~/catkin_ws/PX4-Autopilot/ ~/catkin_ws/PX4-Autopilot/build/px4_sitl_default\n   export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/catkin_ws/PX4-Autopilot\n   export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/sitl_gazebo\n   ```\n\n   保存退出后输入\n\n   ```bash\n   source ~/.bashrc\n   ```\n\n7. 启动仿真\n\n   新打开一个终端, 前往~/catkin_ws/PX4-Autopilot目录下\n\n   ```bash\n   cd ~/catkin_ws/PX4-Autopilot\n   ```\n\n   启动px4 sitl仿真, 机型为固定翼(plane)\n\n   ```bash\n   make px4_sitl gazebo_plane\n   ```\n\n   ![image-20221206185806648](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185806648.png)\n\n   当gazebo模拟器成功启动, 画面中出现小飞机, 终端出现类似这样的信息时\n\n   ![image-20221206185822088](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185822088.png)\n\n   ![image-20221206185835038](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185835038.png)\n   \n   说明仿真启动成功, 此时控制台输入\n   \n   ```bash\n   shutdown\n   ```\n   \n   即可退出仿真\n   \n   ![image-20221206185924821](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185924821.png)\n","source":"_posts/PX4仿真环境的搭建.md","raw":"---\ntitle: PX4仿真环境的搭建\ndate: 2022-12-05 21:24:35\ntags: \n  - px4\n  - ubuntu\n  - docker\ncategories: \n  - 南工御风\ntop_img: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg\ncover: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image.png\n---\n\n# 通过Docker搭建（比较推荐）\n\n> 优点: 搭建方便, 可以轻松地在windows系统上运行, 开发与调试可以同平台进行\n>\n> 缺点: 性能损耗大(需要较高性能), gazebo模拟器没有图形化界面(其实无关紧要)\n>\n> 该教程适用于win11 (我自己的环境), win10自行探索\n\n## 安装Docker Desktop for Windows\n\n### 准备工作\n\n1. 控制面板-程序和功能-启用或关闭Windows功能-勾选【适用于 Linux 的 Windows 子系统】和【虚拟机平台】这两项-立即重新启动；  \n\n### 安装WSL 2和Ubuntu20.04\n\n2. 点击[这里](https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package)前往微软官方文档Step 4, 下载[WSL2 Linux kernel update package for x64 machines](https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi)内核升级包并安装.  \n\n3. 设置WSL版本为WSL 2. 打开 PowerShell , 输入  \n\n   ```bash\n   wsl --set-default-version 2\n   ```\n\n   查看可用ubuntu版本  \n\n   ```bash\n   wsl --list --online\n   ```\n\n   安装  \n\n   ```bash\n   wsl --install -d Ubuntu-20.04\n   ```\n\n   安装结束后设置你的Ubuntu用户名和密码, 即可关闭这个界面.   \n\n### 安装Docker Desktop\n\n4. [官网下载](https://www.docker.com/get-started/), 然后双击运行安装即可.   \n\n5. 设置里勾选 基于WSL 2的引擎  \n\n   ![image-20221205215205499](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215205499.png)\n\n6. 在PowerShell中输入  \n\n   ```bash\n   wsl -l -v\n   ```\n\n   可以发现docker已经在运行  \n\n   ![image-20221205215448505](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215448505.png)\n\n\n## 安装PX4仿真镜像\n\n7. 打开Docker Desktop, 并搜索 `px4-gazebo-headless`, 点击Pull拉取镜像.   \n\n   ![image-20221205220006231](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220006231.png)\n\n8. 拉取成功后, 即可打开Ubuntu20.04, 运行  \n\n   ```bash\n   docker run --rm -it jonasvautherin/px4-gazebo-headless:latest -v plane \n   ```\n\n   > 该命令为在Broadcast模式下运行sitl仿真, 并使用固定翼模型. 在此配置中, 容器将 MAVLink 发送到端口 14550（对于 QGC）和 14540（例如 MAVSDK）上的主机.   \n\n   看到如下画面, 即代表px4 SITL仿真已成功启动  \n\n   ![image-20221205220551641](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220551641.png)\n\n   ![image-20221205220525084](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220525084.png)\n\n   打开QGC, 飞机即可自动连接  \n\n   ![image-20221205220648562](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220648562.png)\n\n   终端输入  \n\n   ```bash\n   shutdown\n   ```\n\n   即可结束仿真  \n\n   ![image-20221205221320196](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205221320196.png)\n\n# 自行搭建（一般推荐）\n\n> 优点: 性能较好, gazebo模拟器有图形化界面(无关紧要), 可以增加Linux基础, 不用docker可以享受自己配环境的乐趣  \n>\n> 缺点: 费时费力, 有docker为什么还要自己配环境()  \n>\n> 此教程基于ubuntu20.04 (我的环境), 如果你是ubuntu18.04也可以参考[这里](https://github.com/Nangong-Yufeng/flight-control/blob/main/PX4%E7%9B%B8%E5%85%B3/PX4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E8%BF%9B%E5%BA%A6.md). 或者你想[跟着PX4官方文档搭建环境](https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#ubuntu-lts-debian-linux-%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83)  \n>\n> 搭建环境时建议使用一个好用的梯子(既然你能看到这个文章说明这应该不是问题)  \n\n## ROS安装\n\n1. 首先安装ROS, 推荐使用[FishRos](https://fishros.org.cn/forum/topic/20/%E5%B0%8F%E9%B1%BC%E7%9A%84%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E7%B3%BB%E5%88%97?lang=zh-CN)  \n\n   ```bash\n   wget http://fishros.com/install -O fishros && . fishros \n   ```\n\n   分别选择1, 3, 4 (配置环境需要用到的)  \n\n   ![image-20221205222351336](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205222351336.png)\n\n## PX4安装\n\n2. 安装依赖\n\n   ```bash\n   sudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python-pip python3-pip\n   ```\n\n   ```bash\n   pip3 install pandas jinja2 pyserial cerberus pyulog==0.7.0 numpy toml pyquaternion empy pyyaml \n   ```\n\n   ```bash\n   pip3 install packaging numpy empy toml pyyaml jinja2 pyargparse\n   ```\n\n3. 创建工作空间\n\n   ```bash\n   sudo apt-get install python-catkin-tools\n   mkdir -p ~/catkin_ws/src\n   mkdir -p ~/catkin_ws/scripts\n   cd catkin_ws && catkin init # 使用catkin_make话，则为cd catkin_ws/src && catkin_init_workspace\n   ```\n\n4. 安装MAVROS\n\n   ```bash\n   sudo apt install ros-noetic-mavros ros-noetic-mavros-extras   \n   wget https://gitee.com/robin_shaun/XTDrone/raw/master/sitl_config/mavros/install_geographiclib_datasets.sh\n   sudo chmod a+x ./install_geographiclib_datasets.sh\n   sudo ./install_geographiclib_datasets.sh #这步需要装一段时间,请耐心等待PX4配置\n   ```\n\n5. 安装PX4\n\n   推荐[官方脚本](https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC)\n\n   ```bash\n   cd ~/catkin_ws\n   ```\n\n   ```bash\n   git clone https://github.com/PX4/PX4-Autopilot.git --recursive\n   ```\n\n   ```bash\n   bash ./PX4-Autopilot/Tools/setup/ubuntu.sh\n   ```\n\n   然后重启电脑\n\n6. 环境配置\n\n   打开一个终端, 输入\n\n   ```bash\n   sudo gedit ~/.bashrc\n   ```\n\n   将下面代码粘贴到里面\n\n   ```bash\n   source ~/catkin_ws/devel/setup.bash\n   source ~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/setup_gazebo.bash ~/catkin_ws/PX4-Autopilot/ ~/catkin_ws/PX4-Autopilot/build/px4_sitl_default\n   export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/catkin_ws/PX4-Autopilot\n   export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/sitl_gazebo\n   ```\n\n   保存退出后输入\n\n   ```bash\n   source ~/.bashrc\n   ```\n\n7. 启动仿真\n\n   新打开一个终端, 前往~/catkin_ws/PX4-Autopilot目录下\n\n   ```bash\n   cd ~/catkin_ws/PX4-Autopilot\n   ```\n\n   启动px4 sitl仿真, 机型为固定翼(plane)\n\n   ```bash\n   make px4_sitl gazebo_plane\n   ```\n\n   ![image-20221206185806648](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185806648.png)\n\n   当gazebo模拟器成功启动, 画面中出现小飞机, 终端出现类似这样的信息时\n\n   ![image-20221206185822088](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185822088.png)\n\n   ![image-20221206185835038](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185835038.png)\n   \n   说明仿真启动成功, 此时控制台输入\n   \n   ```bash\n   shutdown\n   ```\n   \n   即可退出仿真\n   \n   ![image-20221206185924821](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185924821.png)\n","slug":"PX4仿真环境的搭建","published":1,"updated":"2023-07-03T11:08:39.167Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljphk0uv0001s0vn65754oqa","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><h1 id=\"通过docker搭建比较推荐\"><a class=\"markdownIt-Anchor\" href=\"#通过docker搭建比较推荐\"></a> 通过Docker搭建（比较推荐）</h1>\n<blockquote>\n<p>优点: 搭建方便, 可以轻松地在windows系统上运行, 开发与调试可以同平台进行</p>\n<p>缺点: 性能损耗大(需要较高性能), gazebo模拟器没有图形化界面(其实无关紧要)</p>\n<p>该教程适用于win11 (我自己的环境), win10自行探索</p>\n</blockquote>\n<h2 id=\"安装docker-desktop-for-windows\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-desktop-for-windows\"></a> 安装Docker Desktop for Windows</h2>\n<h3 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\"></a> 准备工作</h3>\n<ol>\n<li>控制面板-程序和功能-启用或关闭Windows功能-勾选【适用于 Linux 的 Windows 子系统】和【虚拟机平台】这两项-立即重新启动；</li>\n</ol>\n<h3 id=\"安装wsl-2和ubuntu2004\"><a class=\"markdownIt-Anchor\" href=\"#安装wsl-2和ubuntu2004\"></a> 安装WSL 2和Ubuntu20.04</h3>\n<ol start=\"2\">\n<li>\n<p>点击<a href=\"https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package\">这里</a>前往微软官方文档Step 4, 下载<a href=\"https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi\">WSL2 Linux kernel update package for x64 machines</a>内核升级包并安装.</p>\n</li>\n<li>\n<p>设置WSL版本为WSL 2. 打开 PowerShell , 输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>\n<p>查看可用ubuntu版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --list --online</span><br></pre></td></tr></table></figure>\n<p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --install -d Ubuntu-20.04</span><br></pre></td></tr></table></figure>\n<p>安装结束后设置你的Ubuntu用户名和密码, 即可关闭这个界面.</p>\n</li>\n</ol>\n<h3 id=\"安装docker-desktop\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-desktop\"></a> 安装Docker Desktop</h3>\n<ol start=\"4\">\n<li>\n<p><a href=\"https://www.docker.com/get-started/\">官网下载</a>, 然后双击运行安装即可.</p>\n</li>\n<li>\n<p>设置里勾选 基于WSL 2的引擎</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215205499.png\" alt=\"image-20221205215205499\" /></p>\n</li>\n<li>\n<p>在PowerShell中输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl -l -v</span><br></pre></td></tr></table></figure>\n<p>可以发现docker已经在运行</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215448505.png\" alt=\"image-20221205215448505\" /></p>\n</li>\n</ol>\n<h2 id=\"安装px4仿真镜像\"><a class=\"markdownIt-Anchor\" href=\"#安装px4仿真镜像\"></a> 安装PX4仿真镜像</h2>\n<ol start=\"7\">\n<li>\n<p>打开Docker Desktop, 并搜索 <code>px4-gazebo-headless</code>, 点击Pull拉取镜像.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220006231.png\" alt=\"image-20221205220006231\" /></p>\n</li>\n<li>\n<p>拉取成功后, 即可打开Ubuntu20.04, 运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --<span class=\"built_in\">rm</span> -it jonasvautherin/px4-gazebo-headless:latest -v plane </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>该命令为在Broadcast模式下运行sitl仿真, 并使用固定翼模型. 在此配置中, 容器将 MAVLink 发送到端口 14550（对于 QGC）和 14540（例如 MAVSDK）上的主机.</p>\n</blockquote>\n<p>看到如下画面, 即代表px4 SITL仿真已成功启动</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220551641.png\" alt=\"image-20221205220551641\" /></p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220525084.png\" alt=\"image-20221205220525084\" /></p>\n<p>打开QGC, 飞机即可自动连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220648562.png\" alt=\"image-20221205220648562\" /></p>\n<p>终端输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown</span><br></pre></td></tr></table></figure>\n<p>即可结束仿真</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205221320196.png\" alt=\"image-20221205221320196\" /></p>\n</li>\n</ol>\n<h1 id=\"自行搭建一般推荐\"><a class=\"markdownIt-Anchor\" href=\"#自行搭建一般推荐\"></a> 自行搭建（一般推荐）</h1>\n<blockquote>\n<p>优点: 性能较好, gazebo模拟器有图形化界面(无关紧要), 可以增加Linux基础, 不用docker可以享受自己配环境的乐趣</p>\n<p>缺点: 费时费力, 有docker为什么还要自己配环境()</p>\n<p>此教程基于ubuntu20.04 (我的环境), 如果你是ubuntu18.04也可以参考<a href=\"https://github.com/Nangong-Yufeng/flight-control/blob/main/PX4%E7%9B%B8%E5%85%B3/PX4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E8%BF%9B%E5%BA%A6.md\">这里</a>. 或者你想<a href=\"https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#ubuntu-lts-debian-linux-%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">跟着PX4官方文档搭建环境</a></p>\n<p>搭建环境时建议使用一个好用的梯子(既然你能看到这个文章说明这应该不是问题)</p>\n</blockquote>\n<h2 id=\"ros安装\"><a class=\"markdownIt-Anchor\" href=\"#ros安装\"></a> ROS安装</h2>\n<ol>\n<li>\n<p>首先安装ROS, 推荐使用<a href=\"https://fishros.org.cn/forum/topic/20/%E5%B0%8F%E9%B1%BC%E7%9A%84%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E7%B3%BB%E5%88%97?lang=zh-CN\">FishRos</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://fishros.com/install -O fishros &amp;&amp; . fishros </span><br></pre></td></tr></table></figure>\n<p>分别选择1, 3, 4 (配置环境需要用到的)</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205222351336.png\" alt=\"image-20221205222351336\" /></p>\n</li>\n</ol>\n<h2 id=\"px4安装\"><a class=\"markdownIt-Anchor\" href=\"#px4安装\"></a> PX4安装</h2>\n<ol start=\"2\">\n<li>\n<p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python-pip python3-pip</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install pandas jinja2 pyserial cerberus pyulog==0.7.0 numpy toml pyquaternion empy pyyaml </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install packaging numpy empy toml pyyaml jinja2 pyargparse</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>创建工作空间</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-catkin-tools</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/catkin_ws/src</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/catkin_ws/scripts</span><br><span class=\"line\"><span class=\"built_in\">cd</span> catkin_ws &amp;&amp; catkin init <span class=\"comment\"># 使用catkin_make话，则为cd catkin_ws/src &amp;&amp; catkin_init_workspace</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装MAVROS</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ros-noetic-mavros ros-noetic-mavros-extras   </span><br><span class=\"line\">wget https://gitee.com/robin_shaun/XTDrone/raw/master/sitl_config/mavros/install_geographiclib_datasets.sh</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> a+x ./install_geographiclib_datasets.sh</span><br><span class=\"line\">sudo ./install_geographiclib_datasets.sh <span class=\"comment\">#这步需要装一段时间,请耐心等待PX4配置</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装PX4</p>\n<p>推荐<a href=\"https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\">官方脚本</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/catkin_ws</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/PX4/PX4-Autopilot.git --recursive</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ./PX4-Autopilot/Tools/setup/ubuntu.sh</span><br></pre></td></tr></table></figure>\n<p>然后重启电脑</p>\n</li>\n<li>\n<p>环境配置</p>\n<p>打开一个终端, 输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>将下面代码粘贴到里面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/catkin_ws/devel/setup.bash</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/setup_gazebo.bash ~/catkin_ws/PX4-Autopilot/ ~/catkin_ws/PX4-Autopilot/build/px4_sitl_default</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROS_PACKAGE_PATH=<span class=\"variable\">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROS_PACKAGE_PATH=<span class=\"variable\">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/sitl_gazebo</span><br></pre></td></tr></table></figure>\n<p>保存退出后输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>启动仿真</p>\n<p>新打开一个终端, 前往~/catkin_ws/PX4-Autopilot目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/catkin_ws/PX4-Autopilot</span><br></pre></td></tr></table></figure>\n<p>启动px4 sitl仿真, 机型为固定翼(plane)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make px4_sitl gazebo_plane</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185806648.png\" alt=\"image-20221206185806648\" /></p>\n<p>当gazebo模拟器成功启动, 画面中出现小飞机, 终端出现类似这样的信息时</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185822088.png\" alt=\"image-20221206185822088\" /></p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185835038.png\" alt=\"image-20221206185835038\" /></p>\n<p>说明仿真启动成功, 此时控制台输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown</span><br></pre></td></tr></table></figure>\n<p>即可退出仿真</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185924821.png\" alt=\"image-20221206185924821\" /></p>\n</li>\n</ol>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h1 id=\"通过docker搭建比较推荐\"><a class=\"markdownIt-Anchor\" href=\"#通过docker搭建比较推荐\"></a> 通过Docker搭建（比较推荐）</h1>\n<blockquote>\n<p>优点: 搭建方便, 可以轻松地在windows系统上运行, 开发与调试可以同平台进行</p>\n<p>缺点: 性能损耗大(需要较高性能), gazebo模拟器没有图形化界面(其实无关紧要)</p>\n<p>该教程适用于win11 (我自己的环境), win10自行探索</p>\n</blockquote>\n<h2 id=\"安装docker-desktop-for-windows\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-desktop-for-windows\"></a> 安装Docker Desktop for Windows</h2>\n<h3 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\"></a> 准备工作</h3>\n<ol>\n<li>控制面板-程序和功能-启用或关闭Windows功能-勾选【适用于 Linux 的 Windows 子系统】和【虚拟机平台】这两项-立即重新启动；</li>\n</ol>\n<h3 id=\"安装wsl-2和ubuntu2004\"><a class=\"markdownIt-Anchor\" href=\"#安装wsl-2和ubuntu2004\"></a> 安装WSL 2和Ubuntu20.04</h3>\n<ol start=\"2\">\n<li>\n<p>点击<a href=\"https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package\">这里</a>前往微软官方文档Step 4, 下载<a href=\"https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi\">WSL2 Linux kernel update package for x64 machines</a>内核升级包并安装.</p>\n</li>\n<li>\n<p>设置WSL版本为WSL 2. 打开 PowerShell , 输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --set-default-version 2</span><br></pre></td></tr></table></figure>\n<p>查看可用ubuntu版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --list --online</span><br></pre></td></tr></table></figure>\n<p>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --install -d Ubuntu-20.04</span><br></pre></td></tr></table></figure>\n<p>安装结束后设置你的Ubuntu用户名和密码, 即可关闭这个界面.</p>\n</li>\n</ol>\n<h3 id=\"安装docker-desktop\"><a class=\"markdownIt-Anchor\" href=\"#安装docker-desktop\"></a> 安装Docker Desktop</h3>\n<ol start=\"4\">\n<li>\n<p><a href=\"https://www.docker.com/get-started/\">官网下载</a>, 然后双击运行安装即可.</p>\n</li>\n<li>\n<p>设置里勾选 基于WSL 2的引擎</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215205499.png\" alt=\"image-20221205215205499\" /></p>\n</li>\n<li>\n<p>在PowerShell中输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl -l -v</span><br></pre></td></tr></table></figure>\n<p>可以发现docker已经在运行</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205215448505.png\" alt=\"image-20221205215448505\" /></p>\n</li>\n</ol>\n<h2 id=\"安装px4仿真镜像\"><a class=\"markdownIt-Anchor\" href=\"#安装px4仿真镜像\"></a> 安装PX4仿真镜像</h2>\n<ol start=\"7\">\n<li>\n<p>打开Docker Desktop, 并搜索 <code>px4-gazebo-headless</code>, 点击Pull拉取镜像.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220006231.png\" alt=\"image-20221205220006231\" /></p>\n</li>\n<li>\n<p>拉取成功后, 即可打开Ubuntu20.04, 运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --<span class=\"built_in\">rm</span> -it jonasvautherin/px4-gazebo-headless:latest -v plane </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>该命令为在Broadcast模式下运行sitl仿真, 并使用固定翼模型. 在此配置中, 容器将 MAVLink 发送到端口 14550（对于 QGC）和 14540（例如 MAVSDK）上的主机.</p>\n</blockquote>\n<p>看到如下画面, 即代表px4 SITL仿真已成功启动</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220551641.png\" alt=\"image-20221205220551641\" /></p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220525084.png\" alt=\"image-20221205220525084\" /></p>\n<p>打开QGC, 飞机即可自动连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205220648562.png\" alt=\"image-20221205220648562\" /></p>\n<p>终端输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown</span><br></pre></td></tr></table></figure>\n<p>即可结束仿真</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205221320196.png\" alt=\"image-20221205221320196\" /></p>\n</li>\n</ol>\n<h1 id=\"自行搭建一般推荐\"><a class=\"markdownIt-Anchor\" href=\"#自行搭建一般推荐\"></a> 自行搭建（一般推荐）</h1>\n<blockquote>\n<p>优点: 性能较好, gazebo模拟器有图形化界面(无关紧要), 可以增加Linux基础, 不用docker可以享受自己配环境的乐趣</p>\n<p>缺点: 费时费力, 有docker为什么还要自己配环境()</p>\n<p>此教程基于ubuntu20.04 (我的环境), 如果你是ubuntu18.04也可以参考<a href=\"https://github.com/Nangong-Yufeng/flight-control/blob/main/PX4%E7%9B%B8%E5%85%B3/PX4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E8%BF%9B%E5%BA%A6.md\">这里</a>. 或者你想<a href=\"https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#ubuntu-lts-debian-linux-%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">跟着PX4官方文档搭建环境</a></p>\n<p>搭建环境时建议使用一个好用的梯子(既然你能看到这个文章说明这应该不是问题)</p>\n</blockquote>\n<h2 id=\"ros安装\"><a class=\"markdownIt-Anchor\" href=\"#ros安装\"></a> ROS安装</h2>\n<ol>\n<li>\n<p>首先安装ROS, 推荐使用<a href=\"https://fishros.org.cn/forum/topic/20/%E5%B0%8F%E9%B1%BC%E7%9A%84%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E7%B3%BB%E5%88%97?lang=zh-CN\">FishRos</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://fishros.com/install -O fishros &amp;&amp; . fishros </span><br></pre></td></tr></table></figure>\n<p>分别选择1, 3, 4 (配置环境需要用到的)</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221205222351336.png\" alt=\"image-20221205222351336\" /></p>\n</li>\n</ol>\n<h2 id=\"px4安装\"><a class=\"markdownIt-Anchor\" href=\"#px4安装\"></a> PX4安装</h2>\n<ol start=\"2\">\n<li>\n<p>安装依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python-pip python3-pip</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install pandas jinja2 pyserial cerberus pyulog==0.7.0 numpy toml pyquaternion empy pyyaml </span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install packaging numpy empy toml pyyaml jinja2 pyargparse</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>创建工作空间</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-catkin-tools</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/catkin_ws/src</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/catkin_ws/scripts</span><br><span class=\"line\"><span class=\"built_in\">cd</span> catkin_ws &amp;&amp; catkin init <span class=\"comment\"># 使用catkin_make话，则为cd catkin_ws/src &amp;&amp; catkin_init_workspace</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装MAVROS</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install ros-noetic-mavros ros-noetic-mavros-extras   </span><br><span class=\"line\">wget https://gitee.com/robin_shaun/XTDrone/raw/master/sitl_config/mavros/install_geographiclib_datasets.sh</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> a+x ./install_geographiclib_datasets.sh</span><br><span class=\"line\">sudo ./install_geographiclib_datasets.sh <span class=\"comment\">#这步需要装一段时间,请耐心等待PX4配置</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>安装PX4</p>\n<p>推荐<a href=\"https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC\">官方脚本</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/catkin_ws</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/PX4/PX4-Autopilot.git --recursive</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash ./PX4-Autopilot/Tools/setup/ubuntu.sh</span><br></pre></td></tr></table></figure>\n<p>然后重启电脑</p>\n</li>\n<li>\n<p>环境配置</p>\n<p>打开一个终端, 输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>将下面代码粘贴到里面</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/catkin_ws/devel/setup.bash</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/setup_gazebo.bash ~/catkin_ws/PX4-Autopilot/ ~/catkin_ws/PX4-Autopilot/build/px4_sitl_default</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROS_PACKAGE_PATH=<span class=\"variable\">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot</span><br><span class=\"line\"><span class=\"built_in\">export</span> ROS_PACKAGE_PATH=<span class=\"variable\">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/sitl_gazebo</span><br></pre></td></tr></table></figure>\n<p>保存退出后输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>启动仿真</p>\n<p>新打开一个终端, 前往~/catkin_ws/PX4-Autopilot目录下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/catkin_ws/PX4-Autopilot</span><br></pre></td></tr></table></figure>\n<p>启动px4 sitl仿真, 机型为固定翼(plane)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make px4_sitl gazebo_plane</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185806648.png\" alt=\"image-20221206185806648\" /></p>\n<p>当gazebo模拟器成功启动, 画面中出现小飞机, 终端出现类似这样的信息时</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185822088.png\" alt=\"image-20221206185822088\" /></p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185835038.png\" alt=\"image-20221206185835038\" /></p>\n<p>说明仿真启动成功, 此时控制台输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown</span><br></pre></td></tr></table></figure>\n<p>即可退出仿真</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221206185924821.png\" alt=\"image-20221206185924821\" /></p>\n</li>\n</ol>\n"},{"title":"QA01","date":"2023-07-03T10:49:47.000Z","top_img":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg","cover":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/24-08-B.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/24-08-B.jpg","_content":"\n# QA01\n\n## 目标任务要求不够详细，不知道是什么\n\n> 参考QQ群文件的“中国飞行器设计创新大赛规则（2023年).pdf ->固定翼无人机侦察与打击 ->5.竞赛方法”\n\n### 5.6 A、B 两个机组同时上场。比赛计时指令发出时，由参赛选手开启计时器，然后携带任务箱从出发线行进至操纵区，完成组装、调试和起飞。飞行器携带模拟弹飞离起降区即为起飞成功。\n\n- 在比赛开始后需完成飞行器飞控部分的启动，按照去年的说法就是：打开电脑、启动图传、运行比赛程序、在程序中看到飞行器状态ok后告诉队友，准备起飞。  \n\n​\t![飞行器状态ok，可以起飞](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507185941651.png)  \n\n> 图片来源：https://www.hanhan3344.top/ 顶栏→[2022CADC_录屏 && 图传资料](https://www.aliyundrive.com/s/YEEhfchRVAq)→录屏文件夹→Desktop 2022.11.30 - 15.01.28.02.mp4\n\n### 5.7 参赛选手可自由选择自动或手动的方式起飞。若选择自动方式起飞，须在飞行器起飞前将遥控器置于地面；若选择手动方式起飞，须在飞行器进入目标区之前将遥控器置于地面，以确认自主飞行切换成功。\n\n- 今年新增的加分项目，自动起飞，可以参考PX4 User Guide中的takeoff部分https://docs.px4.io/main/en/flight_modes/takeoff.html#fixed-wing-fw\n\n### 5.8 飞行器执行侦察和打击任务时必须为自主飞行状态。侦察任务为 A 机组识别红色天井中的数字，B 机组识别蓝色天井中的数字。完成侦察后，对“中位数”所在的天井进行打击，打击结果以模拟弹第一落点为准。\n\n- ==自主飞行状态==意味着我们在*起飞后→降落前*不能通过电脑（或遥控器）再对飞机进行任何远程操作，所以编写程序要一步到位。\n\n- ==识别天井中的数字==：\n\n  - 如何从图传传回来的视频流中识别天井中的数字呢？首先我们需要**目标检测算法**对图传视频画面进行实例分割，这样我们就能得到画面中的标靶部分。  \n\n    ![image-20230507191406347](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507191406347.png)  \n\n    > 图片来源：[去年比赛提交的视频](https://www.bilibili.com/video/BV1HP411T7C9/?spm_id_from=333.999.0.0&vd_source=374b2a05cf4288dee623676fbe5a8ca6)（地面端录制）那么目标检测算法从哪里来呢？~~自己写一个~~开源好用的yolov5就是\n\n  - 那么目标检测算法从哪里来呢？~~自己写一个~~[yolov5](https://github.com/ultralytics/yolov5)就是一个开源又好用的目标检测（实例分割）算法\n\n    > 我们新的 YOLOv5 [release v7.0](https://github.com/ultralytics/yolov5/releases/v7.0) 实例分割模型是世界上最快和最准确的模型，击败所有当前 [SOTA 基准](https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco)。我们使它非常易于训练、验证和部署。更多细节请查看 [发行说明](https://github.com/ultralytics/yolov5/releases/v7.0) 或访问我们的 [YOLOv5 分割 Colab 笔记本](https://github.com/ultralytics/yolov5/blob/master/segment/tutorial.ipynb) 以快速入门。\n    >\n    > ——来自yolov5项目首页的介绍（readme.md）\n\n  - 在将标靶部分从视频帧中分离出来后，标靶的数字又该怎么识别呢？~~自己写一个~~[paddleocr](https://github.com/PaddlePaddle/PaddleOCR)就是一个开源又好用的ocr（Optical Character Recognition，光学字符识别）工具\n\n- 在解决了以上问题后，我们现在已经可以获得标靶中的数字，我们将得到的三个数字比较一下，算出中位数，然后我们再通过捕获帧中中位数标靶的像素位置，通过与飞机传回的GPS位置做比对，计算得出中位数标靶的GPS位置（**TODO**）。\n\n- 在计算出中位数标靶的GPS坐标后，我们就可以让飞机自动进入投弹模式，在去年的程序中，程序将会控制飞机取消正在进行的侦察mission，并生成一个包含中位数标靶的GPS坐标的投弹mission发送给飞机执行。\n\n### 5.9 参赛选手可自由选择自动或手动的方式着陆。若选择自动方式着陆，在飞行器着陆且完全静止后方能拿起遥控器；若选择手动方式降落，在侦察与打击任务完成后方能拿起遥控器，操纵飞行器返航着陆。\n\n- 自动着陆，新增加分项，参考PX4 User Guide中的land部分https://docs.px4.io/main/en/flight_modes/land.html#fixed-wing-fw\n\n## 怎么去了解学习（具体途径）\n\n### yolov5\n\n- [官方的简体中文文档](https://github.com/ultralytics/yolov5/blob/master/README.zh-CN.md)。其中有详细的安装、推理、训练等教程  \n\n  ![yolov5官方教程](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507193632234.png)  \n\n### paddleocr\n\n- [官方的简体中文文档](https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/README_ch.md)。里面有更详细的安装、推理、训练教程，推荐看[一行命令快速使用](https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md)部分（不是只看这部分）\n\n### PX4 && mavsdk\n\n- PX4是一个飞控的系统，就好像你的电脑有windows、linux、mac系统，手机有Android、IOS系统，飞控也有一个开源系统叫PX4。\n\n- mavsdk是一个PX4的api，我们想要让飞行器实现自动飞行、自主完成任务、并且与自制的标靶识别功能完美融合，仅仅使用市面上的QGC等地面站软件是做不到的，但是不用QGC等地面站软件我们该怎么控制飞机呢？（你最好知道QGC是可以操控飞机完成一些自动飞行任务的😅）PX4的mavsdk就给我们创造了途径。那么mavsdk和px4有什么关系呢？在PX4 User Guide的[Drone kit](https://docs.px4.io/main/en/robotics/dronekit.html#dronekit)目录中就有说明。（想必大家都是熟读过PX4 User Guide的🤣）\n\n  > 不再推荐使用 DroneKit。\n  >\n  > 你应该改用[MAVSDK （打开新窗口）](https://mavsdk.mavlink.io/)使用 PX4，因为它几乎在所有方面都更好：功能、速度、编程语言支持、维护等。\n  >\n  > ~~可以在此处找到有关将 DroneKit 与 PX4 结合使用的文档：[PX4 v1.12 > DroneKit （打开新窗口）](https://docs.px4.io/v1.12/en/robotics/dronekit.html).~~\n\n  我们打开MAVSDK的链接，来到MAVSDK的官网，可以看到MAVSDK的介绍\n\n  > *MAVSDK*是各种编程语言的库集合，用于与[MAVLink](https://mavlink.io/en/)系统（如无人机、相机或地面系统）接口。\n  >\n  > 这些库提供了一个简单的 API，用于管理一个或多个车辆，提供对车辆信息和遥测的编程访问，以及对任务、移动和其他操作的控制。\n  >\n  > 这些库可以在无人机上的配套计算机上使用，也可以在地面上用于地面站或移动设备。\n  >\n  > MAVSDK 是跨平台的：Linux、macOS、Windows、Android 和 iOS。\n\n  意思就是我们可以用它提供的api，通过python等编程语言，在pc上直接与飞控交互，用来控制飞行器、获取飞行器信息等。那么我们该怎么使用呢？  \n\n  ![image-20230507195142210](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195142210.png)  \n\n  点击进入python的页面中，在这里有两个选项  \n\n  ![image-20230507195237518](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195237518.png)  \n\n  点击第一个[Python QuickStart](https://mavsdk.mavlink.io/main/en/python/quickstart.html)我们可以进入Python QuickStart，里面有从安装到在模拟器运行、arm、takeoff、land的教程。如果你觉得示例不够多，https://github.com/mavlink/MAVSDK-Python/tree/main/examples里面有更多的官方示例。\n\n","source":"_posts/QA01.md","raw":"---\ntitle: QA01\ndate: 2023-07-03 18:49:47\ntags: \n  - px4\n  - ubuntu\n  - mavsdk\n  - yolo\ncategories: \n  - 南工御风\ntop_img: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg\ncover: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/24-08-B.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/24-08-B.jpg\n---\n\n# QA01\n\n## 目标任务要求不够详细，不知道是什么\n\n> 参考QQ群文件的“中国飞行器设计创新大赛规则（2023年).pdf ->固定翼无人机侦察与打击 ->5.竞赛方法”\n\n### 5.6 A、B 两个机组同时上场。比赛计时指令发出时，由参赛选手开启计时器，然后携带任务箱从出发线行进至操纵区，完成组装、调试和起飞。飞行器携带模拟弹飞离起降区即为起飞成功。\n\n- 在比赛开始后需完成飞行器飞控部分的启动，按照去年的说法就是：打开电脑、启动图传、运行比赛程序、在程序中看到飞行器状态ok后告诉队友，准备起飞。  \n\n​\t![飞行器状态ok，可以起飞](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507185941651.png)  \n\n> 图片来源：https://www.hanhan3344.top/ 顶栏→[2022CADC_录屏 && 图传资料](https://www.aliyundrive.com/s/YEEhfchRVAq)→录屏文件夹→Desktop 2022.11.30 - 15.01.28.02.mp4\n\n### 5.7 参赛选手可自由选择自动或手动的方式起飞。若选择自动方式起飞，须在飞行器起飞前将遥控器置于地面；若选择手动方式起飞，须在飞行器进入目标区之前将遥控器置于地面，以确认自主飞行切换成功。\n\n- 今年新增的加分项目，自动起飞，可以参考PX4 User Guide中的takeoff部分https://docs.px4.io/main/en/flight_modes/takeoff.html#fixed-wing-fw\n\n### 5.8 飞行器执行侦察和打击任务时必须为自主飞行状态。侦察任务为 A 机组识别红色天井中的数字，B 机组识别蓝色天井中的数字。完成侦察后，对“中位数”所在的天井进行打击，打击结果以模拟弹第一落点为准。\n\n- ==自主飞行状态==意味着我们在*起飞后→降落前*不能通过电脑（或遥控器）再对飞机进行任何远程操作，所以编写程序要一步到位。\n\n- ==识别天井中的数字==：\n\n  - 如何从图传传回来的视频流中识别天井中的数字呢？首先我们需要**目标检测算法**对图传视频画面进行实例分割，这样我们就能得到画面中的标靶部分。  \n\n    ![image-20230507191406347](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507191406347.png)  \n\n    > 图片来源：[去年比赛提交的视频](https://www.bilibili.com/video/BV1HP411T7C9/?spm_id_from=333.999.0.0&vd_source=374b2a05cf4288dee623676fbe5a8ca6)（地面端录制）那么目标检测算法从哪里来呢？~~自己写一个~~开源好用的yolov5就是\n\n  - 那么目标检测算法从哪里来呢？~~自己写一个~~[yolov5](https://github.com/ultralytics/yolov5)就是一个开源又好用的目标检测（实例分割）算法\n\n    > 我们新的 YOLOv5 [release v7.0](https://github.com/ultralytics/yolov5/releases/v7.0) 实例分割模型是世界上最快和最准确的模型，击败所有当前 [SOTA 基准](https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco)。我们使它非常易于训练、验证和部署。更多细节请查看 [发行说明](https://github.com/ultralytics/yolov5/releases/v7.0) 或访问我们的 [YOLOv5 分割 Colab 笔记本](https://github.com/ultralytics/yolov5/blob/master/segment/tutorial.ipynb) 以快速入门。\n    >\n    > ——来自yolov5项目首页的介绍（readme.md）\n\n  - 在将标靶部分从视频帧中分离出来后，标靶的数字又该怎么识别呢？~~自己写一个~~[paddleocr](https://github.com/PaddlePaddle/PaddleOCR)就是一个开源又好用的ocr（Optical Character Recognition，光学字符识别）工具\n\n- 在解决了以上问题后，我们现在已经可以获得标靶中的数字，我们将得到的三个数字比较一下，算出中位数，然后我们再通过捕获帧中中位数标靶的像素位置，通过与飞机传回的GPS位置做比对，计算得出中位数标靶的GPS位置（**TODO**）。\n\n- 在计算出中位数标靶的GPS坐标后，我们就可以让飞机自动进入投弹模式，在去年的程序中，程序将会控制飞机取消正在进行的侦察mission，并生成一个包含中位数标靶的GPS坐标的投弹mission发送给飞机执行。\n\n### 5.9 参赛选手可自由选择自动或手动的方式着陆。若选择自动方式着陆，在飞行器着陆且完全静止后方能拿起遥控器；若选择手动方式降落，在侦察与打击任务完成后方能拿起遥控器，操纵飞行器返航着陆。\n\n- 自动着陆，新增加分项，参考PX4 User Guide中的land部分https://docs.px4.io/main/en/flight_modes/land.html#fixed-wing-fw\n\n## 怎么去了解学习（具体途径）\n\n### yolov5\n\n- [官方的简体中文文档](https://github.com/ultralytics/yolov5/blob/master/README.zh-CN.md)。其中有详细的安装、推理、训练等教程  \n\n  ![yolov5官方教程](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507193632234.png)  \n\n### paddleocr\n\n- [官方的简体中文文档](https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/README_ch.md)。里面有更详细的安装、推理、训练教程，推荐看[一行命令快速使用](https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md)部分（不是只看这部分）\n\n### PX4 && mavsdk\n\n- PX4是一个飞控的系统，就好像你的电脑有windows、linux、mac系统，手机有Android、IOS系统，飞控也有一个开源系统叫PX4。\n\n- mavsdk是一个PX4的api，我们想要让飞行器实现自动飞行、自主完成任务、并且与自制的标靶识别功能完美融合，仅仅使用市面上的QGC等地面站软件是做不到的，但是不用QGC等地面站软件我们该怎么控制飞机呢？（你最好知道QGC是可以操控飞机完成一些自动飞行任务的😅）PX4的mavsdk就给我们创造了途径。那么mavsdk和px4有什么关系呢？在PX4 User Guide的[Drone kit](https://docs.px4.io/main/en/robotics/dronekit.html#dronekit)目录中就有说明。（想必大家都是熟读过PX4 User Guide的🤣）\n\n  > 不再推荐使用 DroneKit。\n  >\n  > 你应该改用[MAVSDK （打开新窗口）](https://mavsdk.mavlink.io/)使用 PX4，因为它几乎在所有方面都更好：功能、速度、编程语言支持、维护等。\n  >\n  > ~~可以在此处找到有关将 DroneKit 与 PX4 结合使用的文档：[PX4 v1.12 > DroneKit （打开新窗口）](https://docs.px4.io/v1.12/en/robotics/dronekit.html).~~\n\n  我们打开MAVSDK的链接，来到MAVSDK的官网，可以看到MAVSDK的介绍\n\n  > *MAVSDK*是各种编程语言的库集合，用于与[MAVLink](https://mavlink.io/en/)系统（如无人机、相机或地面系统）接口。\n  >\n  > 这些库提供了一个简单的 API，用于管理一个或多个车辆，提供对车辆信息和遥测的编程访问，以及对任务、移动和其他操作的控制。\n  >\n  > 这些库可以在无人机上的配套计算机上使用，也可以在地面上用于地面站或移动设备。\n  >\n  > MAVSDK 是跨平台的：Linux、macOS、Windows、Android 和 iOS。\n\n  意思就是我们可以用它提供的api，通过python等编程语言，在pc上直接与飞控交互，用来控制飞行器、获取飞行器信息等。那么我们该怎么使用呢？  \n\n  ![image-20230507195142210](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195142210.png)  \n\n  点击进入python的页面中，在这里有两个选项  \n\n  ![image-20230507195237518](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195237518.png)  \n\n  点击第一个[Python QuickStart](https://mavsdk.mavlink.io/main/en/python/quickstart.html)我们可以进入Python QuickStart，里面有从安装到在模拟器运行、arm、takeoff、land的教程。如果你觉得示例不够多，https://github.com/mavlink/MAVSDK-Python/tree/main/examples里面有更多的官方示例。\n\n","slug":"QA01","published":1,"updated":"2023-07-03T11:09:02.840Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljphk0uz0003s0vnhhocfya9","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><h1 id=\"qa01\"><a class=\"markdownIt-Anchor\" href=\"#qa01\"></a> QA01</h1>\n<h2 id=\"目标任务要求不够详细不知道是什么\"><a class=\"markdownIt-Anchor\" href=\"#目标任务要求不够详细不知道是什么\"></a> 目标任务要求不够详细，不知道是什么</h2>\n<blockquote>\n<p>参考QQ群文件的“中国飞行器设计创新大赛规则（2023年).pdf -&gt;固定翼无人机侦察与打击 -&gt;5.竞赛方法”</p>\n</blockquote>\n<h3 id=\"56-a-b-两个机组同时上场-比赛计时指令发出时由参赛选手开启计时器然后携带任务箱从出发线行进至操纵区完成组装-调试和起飞-飞行器携带模拟弹飞离起降区即为起飞成功\"><a class=\"markdownIt-Anchor\" href=\"#56-a-b-两个机组同时上场-比赛计时指令发出时由参赛选手开启计时器然后携带任务箱从出发线行进至操纵区完成组装-调试和起飞-飞行器携带模拟弹飞离起降区即为起飞成功\"></a> 5.6 A、B 两个机组同时上场。比赛计时指令发出时，由参赛选手开启计时器，然后携带任务箱从出发线行进至操纵区，完成组装、调试和起飞。飞行器携带模拟弹飞离起降区即为起飞成功。</h3>\n<ul>\n<li>在比赛开始后需完成飞行器飞控部分的启动，按照去年的说法就是：打开电脑、启动图传、运行比赛程序、在程序中看到飞行器状态ok后告诉队友，准备起飞。</li>\n</ul>\n<p>​\t<img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507185941651.png\" alt=\"飞行器状态ok，可以起飞\" /></p>\n<blockquote>\n<p>图片来源：<a href=\"https://www.hanhan3344.top/\">https://www.hanhan3344.top/</a> 顶栏→<a href=\"https://www.aliyundrive.com/s/YEEhfchRVAq\">2022CADC_录屏 &amp;&amp; 图传资料</a>→录屏文件夹→Desktop 2022.11.30 - 15.01.28.02.mp4</p>\n</blockquote>\n<h3 id=\"57-参赛选手可自由选择自动或手动的方式起飞-若选择自动方式起飞须在飞行器起飞前将遥控器置于地面若选择手动方式起飞须在飞行器进入目标区之前将遥控器置于地面以确认自主飞行切换成功\"><a class=\"markdownIt-Anchor\" href=\"#57-参赛选手可自由选择自动或手动的方式起飞-若选择自动方式起飞须在飞行器起飞前将遥控器置于地面若选择手动方式起飞须在飞行器进入目标区之前将遥控器置于地面以确认自主飞行切换成功\"></a> 5.7 参赛选手可自由选择自动或手动的方式起飞。若选择自动方式起飞，须在飞行器起飞前将遥控器置于地面；若选择手动方式起飞，须在飞行器进入目标区之前将遥控器置于地面，以确认自主飞行切换成功。</h3>\n<ul>\n<li>今年新增的加分项目，自动起飞，可以参考PX4 User Guide中的takeoff部分https://docs.px4.io/main/en/flight_modes/takeoff.html#fixed-wing-fw</li>\n</ul>\n<h3 id=\"58-飞行器执行侦察和打击任务时必须为自主飞行状态-侦察任务为-a-机组识别红色天井中的数字b-机组识别蓝色天井中的数字-完成侦察后对中位数所在的天井进行打击打击结果以模拟弹第一落点为准\"><a class=\"markdownIt-Anchor\" href=\"#58-飞行器执行侦察和打击任务时必须为自主飞行状态-侦察任务为-a-机组识别红色天井中的数字b-机组识别蓝色天井中的数字-完成侦察后对中位数所在的天井进行打击打击结果以模拟弹第一落点为准\"></a> 5.8 飞行器执行侦察和打击任务时必须为自主飞行状态。侦察任务为 A 机组识别红色天井中的数字，B 机组识别蓝色天井中的数字。完成侦察后，对“中位数”所在的天井进行打击，打击结果以模拟弹第一落点为准。</h3>\n<ul>\n<li>\n<p><mark>自主飞行状态</mark>意味着我们在<em>起飞后→降落前</em>不能通过电脑（或遥控器）再对飞机进行任何远程操作，所以编写程序要一步到位。</p>\n</li>\n<li>\n<p><mark>识别天井中的数字</mark>：</p>\n<ul>\n<li>\n<p>如何从图传传回来的视频流中识别天井中的数字呢？首先我们需要<strong>目标检测算法</strong>对图传视频画面进行实例分割，这样我们就能得到画面中的标靶部分。</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507191406347.png\" alt=\"image-20230507191406347\" /></p>\n<blockquote>\n<p>图片来源：<a href=\"https://www.bilibili.com/video/BV1HP411T7C9/?spm_id_from=333.999.0.0&amp;vd_source=374b2a05cf4288dee623676fbe5a8ca6\">去年比赛提交的视频</a>（地面端录制）那么目标检测算法从哪里来呢？<s>自己写一个</s>开源好用的yolov5就是</p>\n</blockquote>\n</li>\n<li>\n<p>那么目标检测算法从哪里来呢？<s>自己写一个</s><a href=\"https://github.com/ultralytics/yolov5\">yolov5</a>就是一个开源又好用的目标检测（实例分割）算法</p>\n<blockquote>\n<p>我们新的 YOLOv5 <a href=\"https://github.com/ultralytics/yolov5/releases/v7.0\">release v7.0</a> 实例分割模型是世界上最快和最准确的模型，击败所有当前 <a href=\"https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco\">SOTA 基准</a>。我们使它非常易于训练、验证和部署。更多细节请查看 <a href=\"https://github.com/ultralytics/yolov5/releases/v7.0\">发行说明</a> 或访问我们的 <a href=\"https://github.com/ultralytics/yolov5/blob/master/segment/tutorial.ipynb\">YOLOv5 分割 Colab 笔记本</a> 以快速入门。</p>\n<p>——来自yolov5项目首页的介绍（<a href=\"http://readme.md\">readme.md</a>）</p>\n</blockquote>\n</li>\n<li>\n<p>在将标靶部分从视频帧中分离出来后，标靶的数字又该怎么识别呢？<s>自己写一个</s><a href=\"https://github.com/PaddlePaddle/PaddleOCR\">paddleocr</a>就是一个开源又好用的ocr（Optical Character Recognition，光学字符识别）工具</p>\n</li>\n</ul>\n</li>\n<li>\n<p>在解决了以上问题后，我们现在已经可以获得标靶中的数字，我们将得到的三个数字比较一下，算出中位数，然后我们再通过捕获帧中中位数标靶的像素位置，通过与飞机传回的GPS位置做比对，计算得出中位数标靶的GPS位置（<strong>TODO</strong>）。</p>\n</li>\n<li>\n<p>在计算出中位数标靶的GPS坐标后，我们就可以让飞机自动进入投弹模式，在去年的程序中，程序将会控制飞机取消正在进行的侦察mission，并生成一个包含中位数标靶的GPS坐标的投弹mission发送给飞机执行。</p>\n</li>\n</ul>\n<h3 id=\"59-参赛选手可自由选择自动或手动的方式着陆-若选择自动方式着陆在飞行器着陆且完全静止后方能拿起遥控器若选择手动方式降落在侦察与打击任务完成后方能拿起遥控器操纵飞行器返航着陆\"><a class=\"markdownIt-Anchor\" href=\"#59-参赛选手可自由选择自动或手动的方式着陆-若选择自动方式着陆在飞行器着陆且完全静止后方能拿起遥控器若选择手动方式降落在侦察与打击任务完成后方能拿起遥控器操纵飞行器返航着陆\"></a> 5.9 参赛选手可自由选择自动或手动的方式着陆。若选择自动方式着陆，在飞行器着陆且完全静止后方能拿起遥控器；若选择手动方式降落，在侦察与打击任务完成后方能拿起遥控器，操纵飞行器返航着陆。</h3>\n<ul>\n<li>自动着陆，新增加分项，参考PX4 User Guide中的land部分https://docs.px4.io/main/en/flight_modes/land.html#fixed-wing-fw</li>\n</ul>\n<h2 id=\"怎么去了解学习具体途径\"><a class=\"markdownIt-Anchor\" href=\"#怎么去了解学习具体途径\"></a> 怎么去了解学习（具体途径）</h2>\n<h3 id=\"yolov5\"><a class=\"markdownIt-Anchor\" href=\"#yolov5\"></a> yolov5</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/ultralytics/yolov5/blob/master/README.zh-CN.md\">官方的简体中文文档</a>。其中有详细的安装、推理、训练等教程</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507193632234.png\" alt=\"yolov5官方教程\" /></p>\n</li>\n</ul>\n<h3 id=\"paddleocr\"><a class=\"markdownIt-Anchor\" href=\"#paddleocr\"></a> paddleocr</h3>\n<ul>\n<li><a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/README_ch.md\">官方的简体中文文档</a>。里面有更详细的安装、推理、训练教程，推荐看<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md\">一行命令快速使用</a>部分（不是只看这部分）</li>\n</ul>\n<h3 id=\"px4-mavsdk\"><a class=\"markdownIt-Anchor\" href=\"#px4-mavsdk\"></a> PX4 &amp;&amp; mavsdk</h3>\n<ul>\n<li>\n<p>PX4是一个飞控的系统，就好像你的电脑有windows、linux、mac系统，手机有Android、IOS系统，飞控也有一个开源系统叫PX4。</p>\n</li>\n<li>\n<p>mavsdk是一个PX4的api，我们想要让飞行器实现自动飞行、自主完成任务、并且与自制的标靶识别功能完美融合，仅仅使用市面上的QGC等地面站软件是做不到的，但是不用QGC等地面站软件我们该怎么控制飞机呢？（你最好知道QGC是可以操控飞机完成一些自动飞行任务的😅）PX4的mavsdk就给我们创造了途径。那么mavsdk和px4有什么关系呢？在PX4 User Guide的<a href=\"https://docs.px4.io/main/en/robotics/dronekit.html#dronekit\">Drone kit</a>目录中就有说明。（想必大家都是熟读过PX4 User Guide的🤣）</p>\n<blockquote>\n<p>不再推荐使用 DroneKit。</p>\n<p>你应该改用<a href=\"https://mavsdk.mavlink.io/\">MAVSDK （打开新窗口）</a>使用 PX4，因为它几乎在所有方面都更好：功能、速度、编程语言支持、维护等。</p>\n<p><s>可以在此处找到有关将 DroneKit 与 PX4 结合使用的文档：<a href=\"https://docs.px4.io/v1.12/en/robotics/dronekit.html\">PX4 v1.12 &gt; DroneKit （打开新窗口）</a>.</s></p>\n</blockquote>\n<p>我们打开MAVSDK的链接，来到MAVSDK的官网，可以看到MAVSDK的介绍</p>\n<blockquote>\n<p><em>MAVSDK</em>是各种编程语言的库集合，用于与<a href=\"https://mavlink.io/en/\">MAVLink</a>系统（如无人机、相机或地面系统）接口。</p>\n<p>这些库提供了一个简单的 API，用于管理一个或多个车辆，提供对车辆信息和遥测的编程访问，以及对任务、移动和其他操作的控制。</p>\n<p>这些库可以在无人机上的配套计算机上使用，也可以在地面上用于地面站或移动设备。</p>\n<p>MAVSDK 是跨平台的：Linux、macOS、Windows、Android 和 iOS。</p>\n</blockquote>\n<p>意思就是我们可以用它提供的api，通过python等编程语言，在pc上直接与飞控交互，用来控制飞行器、获取飞行器信息等。那么我们该怎么使用呢？</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195142210.png\" alt=\"image-20230507195142210\" /></p>\n<p>点击进入python的页面中，在这里有两个选项</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195237518.png\" alt=\"image-20230507195237518\" /></p>\n<p>点击第一个<a href=\"https://mavsdk.mavlink.io/main/en/python/quickstart.html\">Python QuickStart</a>我们可以进入Python QuickStart，里面有从安装到在模拟器运行、arm、takeoff、land的教程。如果你觉得示例不够多，<a href=\"https://github.com/mavlink/MAVSDK-Python/tree/main/examples%E9%87%8C%E9%9D%A2%E6%9C%89%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%AE%98%E6%96%B9%E7%A4%BA%E4%BE%8B%E3%80%82\">https://github.com/mavlink/MAVSDK-Python/tree/main/examples里面有更多的官方示例。</a></p>\n</li>\n</ul>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h1 id=\"qa01\"><a class=\"markdownIt-Anchor\" href=\"#qa01\"></a> QA01</h1>\n<h2 id=\"目标任务要求不够详细不知道是什么\"><a class=\"markdownIt-Anchor\" href=\"#目标任务要求不够详细不知道是什么\"></a> 目标任务要求不够详细，不知道是什么</h2>\n<blockquote>\n<p>参考QQ群文件的“中国飞行器设计创新大赛规则（2023年).pdf -&gt;固定翼无人机侦察与打击 -&gt;5.竞赛方法”</p>\n</blockquote>\n<h3 id=\"56-a-b-两个机组同时上场-比赛计时指令发出时由参赛选手开启计时器然后携带任务箱从出发线行进至操纵区完成组装-调试和起飞-飞行器携带模拟弹飞离起降区即为起飞成功\"><a class=\"markdownIt-Anchor\" href=\"#56-a-b-两个机组同时上场-比赛计时指令发出时由参赛选手开启计时器然后携带任务箱从出发线行进至操纵区完成组装-调试和起飞-飞行器携带模拟弹飞离起降区即为起飞成功\"></a> 5.6 A、B 两个机组同时上场。比赛计时指令发出时，由参赛选手开启计时器，然后携带任务箱从出发线行进至操纵区，完成组装、调试和起飞。飞行器携带模拟弹飞离起降区即为起飞成功。</h3>\n<ul>\n<li>在比赛开始后需完成飞行器飞控部分的启动，按照去年的说法就是：打开电脑、启动图传、运行比赛程序、在程序中看到飞行器状态ok后告诉队友，准备起飞。</li>\n</ul>\n<p>​\t<img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507185941651.png\" alt=\"飞行器状态ok，可以起飞\" /></p>\n<blockquote>\n<p>图片来源：<a href=\"https://www.hanhan3344.top/\">https://www.hanhan3344.top/</a> 顶栏→<a href=\"https://www.aliyundrive.com/s/YEEhfchRVAq\">2022CADC_录屏 &amp;&amp; 图传资料</a>→录屏文件夹→Desktop 2022.11.30 - 15.01.28.02.mp4</p>\n</blockquote>\n<h3 id=\"57-参赛选手可自由选择自动或手动的方式起飞-若选择自动方式起飞须在飞行器起飞前将遥控器置于地面若选择手动方式起飞须在飞行器进入目标区之前将遥控器置于地面以确认自主飞行切换成功\"><a class=\"markdownIt-Anchor\" href=\"#57-参赛选手可自由选择自动或手动的方式起飞-若选择自动方式起飞须在飞行器起飞前将遥控器置于地面若选择手动方式起飞须在飞行器进入目标区之前将遥控器置于地面以确认自主飞行切换成功\"></a> 5.7 参赛选手可自由选择自动或手动的方式起飞。若选择自动方式起飞，须在飞行器起飞前将遥控器置于地面；若选择手动方式起飞，须在飞行器进入目标区之前将遥控器置于地面，以确认自主飞行切换成功。</h3>\n<ul>\n<li>今年新增的加分项目，自动起飞，可以参考PX4 User Guide中的takeoff部分https://docs.px4.io/main/en/flight_modes/takeoff.html#fixed-wing-fw</li>\n</ul>\n<h3 id=\"58-飞行器执行侦察和打击任务时必须为自主飞行状态-侦察任务为-a-机组识别红色天井中的数字b-机组识别蓝色天井中的数字-完成侦察后对中位数所在的天井进行打击打击结果以模拟弹第一落点为准\"><a class=\"markdownIt-Anchor\" href=\"#58-飞行器执行侦察和打击任务时必须为自主飞行状态-侦察任务为-a-机组识别红色天井中的数字b-机组识别蓝色天井中的数字-完成侦察后对中位数所在的天井进行打击打击结果以模拟弹第一落点为准\"></a> 5.8 飞行器执行侦察和打击任务时必须为自主飞行状态。侦察任务为 A 机组识别红色天井中的数字，B 机组识别蓝色天井中的数字。完成侦察后，对“中位数”所在的天井进行打击，打击结果以模拟弹第一落点为准。</h3>\n<ul>\n<li>\n<p><mark>自主飞行状态</mark>意味着我们在<em>起飞后→降落前</em>不能通过电脑（或遥控器）再对飞机进行任何远程操作，所以编写程序要一步到位。</p>\n</li>\n<li>\n<p><mark>识别天井中的数字</mark>：</p>\n<ul>\n<li>\n<p>如何从图传传回来的视频流中识别天井中的数字呢？首先我们需要<strong>目标检测算法</strong>对图传视频画面进行实例分割，这样我们就能得到画面中的标靶部分。</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507191406347.png\" alt=\"image-20230507191406347\" /></p>\n<blockquote>\n<p>图片来源：<a href=\"https://www.bilibili.com/video/BV1HP411T7C9/?spm_id_from=333.999.0.0&amp;vd_source=374b2a05cf4288dee623676fbe5a8ca6\">去年比赛提交的视频</a>（地面端录制）那么目标检测算法从哪里来呢？<s>自己写一个</s>开源好用的yolov5就是</p>\n</blockquote>\n</li>\n<li>\n<p>那么目标检测算法从哪里来呢？<s>自己写一个</s><a href=\"https://github.com/ultralytics/yolov5\">yolov5</a>就是一个开源又好用的目标检测（实例分割）算法</p>\n<blockquote>\n<p>我们新的 YOLOv5 <a href=\"https://github.com/ultralytics/yolov5/releases/v7.0\">release v7.0</a> 实例分割模型是世界上最快和最准确的模型，击败所有当前 <a href=\"https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco\">SOTA 基准</a>。我们使它非常易于训练、验证和部署。更多细节请查看 <a href=\"https://github.com/ultralytics/yolov5/releases/v7.0\">发行说明</a> 或访问我们的 <a href=\"https://github.com/ultralytics/yolov5/blob/master/segment/tutorial.ipynb\">YOLOv5 分割 Colab 笔记本</a> 以快速入门。</p>\n<p>——来自yolov5项目首页的介绍（<a href=\"http://readme.md\">readme.md</a>）</p>\n</blockquote>\n</li>\n<li>\n<p>在将标靶部分从视频帧中分离出来后，标靶的数字又该怎么识别呢？<s>自己写一个</s><a href=\"https://github.com/PaddlePaddle/PaddleOCR\">paddleocr</a>就是一个开源又好用的ocr（Optical Character Recognition，光学字符识别）工具</p>\n</li>\n</ul>\n</li>\n<li>\n<p>在解决了以上问题后，我们现在已经可以获得标靶中的数字，我们将得到的三个数字比较一下，算出中位数，然后我们再通过捕获帧中中位数标靶的像素位置，通过与飞机传回的GPS位置做比对，计算得出中位数标靶的GPS位置（<strong>TODO</strong>）。</p>\n</li>\n<li>\n<p>在计算出中位数标靶的GPS坐标后，我们就可以让飞机自动进入投弹模式，在去年的程序中，程序将会控制飞机取消正在进行的侦察mission，并生成一个包含中位数标靶的GPS坐标的投弹mission发送给飞机执行。</p>\n</li>\n</ul>\n<h3 id=\"59-参赛选手可自由选择自动或手动的方式着陆-若选择自动方式着陆在飞行器着陆且完全静止后方能拿起遥控器若选择手动方式降落在侦察与打击任务完成后方能拿起遥控器操纵飞行器返航着陆\"><a class=\"markdownIt-Anchor\" href=\"#59-参赛选手可自由选择自动或手动的方式着陆-若选择自动方式着陆在飞行器着陆且完全静止后方能拿起遥控器若选择手动方式降落在侦察与打击任务完成后方能拿起遥控器操纵飞行器返航着陆\"></a> 5.9 参赛选手可自由选择自动或手动的方式着陆。若选择自动方式着陆，在飞行器着陆且完全静止后方能拿起遥控器；若选择手动方式降落，在侦察与打击任务完成后方能拿起遥控器，操纵飞行器返航着陆。</h3>\n<ul>\n<li>自动着陆，新增加分项，参考PX4 User Guide中的land部分https://docs.px4.io/main/en/flight_modes/land.html#fixed-wing-fw</li>\n</ul>\n<h2 id=\"怎么去了解学习具体途径\"><a class=\"markdownIt-Anchor\" href=\"#怎么去了解学习具体途径\"></a> 怎么去了解学习（具体途径）</h2>\n<h3 id=\"yolov5\"><a class=\"markdownIt-Anchor\" href=\"#yolov5\"></a> yolov5</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/ultralytics/yolov5/blob/master/README.zh-CN.md\">官方的简体中文文档</a>。其中有详细的安装、推理、训练等教程</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507193632234.png\" alt=\"yolov5官方教程\" /></p>\n</li>\n</ul>\n<h3 id=\"paddleocr\"><a class=\"markdownIt-Anchor\" href=\"#paddleocr\"></a> paddleocr</h3>\n<ul>\n<li><a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/README_ch.md\">官方的简体中文文档</a>。里面有更详细的安装、推理、训练教程，推荐看<a href=\"https://github.com/PaddlePaddle/PaddleOCR/blob/release/2.6/doc/doc_ch/quickstart.md\">一行命令快速使用</a>部分（不是只看这部分）</li>\n</ul>\n<h3 id=\"px4-mavsdk\"><a class=\"markdownIt-Anchor\" href=\"#px4-mavsdk\"></a> PX4 &amp;&amp; mavsdk</h3>\n<ul>\n<li>\n<p>PX4是一个飞控的系统，就好像你的电脑有windows、linux、mac系统，手机有Android、IOS系统，飞控也有一个开源系统叫PX4。</p>\n</li>\n<li>\n<p>mavsdk是一个PX4的api，我们想要让飞行器实现自动飞行、自主完成任务、并且与自制的标靶识别功能完美融合，仅仅使用市面上的QGC等地面站软件是做不到的，但是不用QGC等地面站软件我们该怎么控制飞机呢？（你最好知道QGC是可以操控飞机完成一些自动飞行任务的😅）PX4的mavsdk就给我们创造了途径。那么mavsdk和px4有什么关系呢？在PX4 User Guide的<a href=\"https://docs.px4.io/main/en/robotics/dronekit.html#dronekit\">Drone kit</a>目录中就有说明。（想必大家都是熟读过PX4 User Guide的🤣）</p>\n<blockquote>\n<p>不再推荐使用 DroneKit。</p>\n<p>你应该改用<a href=\"https://mavsdk.mavlink.io/\">MAVSDK （打开新窗口）</a>使用 PX4，因为它几乎在所有方面都更好：功能、速度、编程语言支持、维护等。</p>\n<p><s>可以在此处找到有关将 DroneKit 与 PX4 结合使用的文档：<a href=\"https://docs.px4.io/v1.12/en/robotics/dronekit.html\">PX4 v1.12 &gt; DroneKit （打开新窗口）</a>.</s></p>\n</blockquote>\n<p>我们打开MAVSDK的链接，来到MAVSDK的官网，可以看到MAVSDK的介绍</p>\n<blockquote>\n<p><em>MAVSDK</em>是各种编程语言的库集合，用于与<a href=\"https://mavlink.io/en/\">MAVLink</a>系统（如无人机、相机或地面系统）接口。</p>\n<p>这些库提供了一个简单的 API，用于管理一个或多个车辆，提供对车辆信息和遥测的编程访问，以及对任务、移动和其他操作的控制。</p>\n<p>这些库可以在无人机上的配套计算机上使用，也可以在地面上用于地面站或移动设备。</p>\n<p>MAVSDK 是跨平台的：Linux、macOS、Windows、Android 和 iOS。</p>\n</blockquote>\n<p>意思就是我们可以用它提供的api，通过python等编程语言，在pc上直接与飞控交互，用来控制飞行器、获取飞行器信息等。那么我们该怎么使用呢？</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195142210.png\" alt=\"image-20230507195142210\" /></p>\n<p>点击进入python的页面中，在这里有两个选项</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20230507195237518.png\" alt=\"image-20230507195237518\" /></p>\n<p>点击第一个<a href=\"https://mavsdk.mavlink.io/main/en/python/quickstart.html\">Python QuickStart</a>我们可以进入Python QuickStart，里面有从安装到在模拟器运行、arm、takeoff、land的教程。如果你觉得示例不够多，<a href=\"https://github.com/mavlink/MAVSDK-Python/tree/main/examples%E9%87%8C%E9%9D%A2%E6%9C%89%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%AE%98%E6%96%B9%E7%A4%BA%E4%BE%8B%E3%80%82\">https://github.com/mavlink/MAVSDK-Python/tree/main/examples里面有更多的官方示例。</a></p>\n</li>\n</ul>\n"},{"title":"【飞控】01_安装、接线、连接地面站","date":"2023-07-03T10:48:51.000Z","top_img":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg","cover":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png","_content":"\n# 一. 安装、接线、连接地面站\n\n***PX4官网UserGuide地址（\\***[***https://docs.px4.io/v1.12/en/\\***](https://docs.px4.io/v1.12/en/)***），强烈建议细读几遍\\***\n\n## 接线\n\n详见[PX4官网（以我们去年用的CUAV V5+为例）](https://docs.px4.io/v1.12/en/assembly/quick_start_cuav_v5_plus.html)\n\n或者[CUAV官网（以我们去年用的CUAV V5+为例）](https://doc.cuav.net/flight-controller/v5-autopilot/en/quick-start/quick-start-v5+.html)\n\n或者去年的比赛机（物理观察）\n\n- ![箱子](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101925.png)\n- ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png)\n\n完成接线后，给飞行控制器（以下统称“飞控”）通电（使用3s锂电池或usb数据线），其大致情况应该如上图所示，飞控蓝灯闪烁、GPS蓝灯闪烁、数传绿灯慢闪（未连接），接下来可以连接地面站。\n\n## QGroundControl地面站（简称QGC）\n\n- PX4官方推荐地面站[QGroundControl](http://qgroundcontrol.com/)，下载安装对应你的操作系统的QGC。\n\n- 打开未连接飞机时如图\n\n  - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102022.png)\n\n- 连接飞机后如图\n\n  - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102045.png)\n\n  - 其中，左上角“Not Ready”代表飞行器现在的状态即未准备好，飞行器的状态按经验以及实操顺序可列为以下几种：\n\n    - Not Ready（黄色底色）：飞行器未准备就绪，有的操作未完成（比如RC遥控器未连接、飞机姿态错误（未水平放置）、空速管故障、GPS未搜到星等），无法ARM飞机。如你所见GPS未搜到星被打上了删除线，这是因为评价飞机是否Ready的参数是你可以调的，熟读参数表的你想必已经找到了(https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander)（影响是否Ready的参数不止这些，如果你遇到了某些参数设置了但是没有达到预想的效果，请自行Google）\n    - Ready To Fly（绿色底色）：飞行器已准备就绪，可以ARM。在ARM前，舵机可能会通电保持固定姿态（与固件版本有关），电机可能在你最开始上电时进行自我检测，但是均不会收到任何输入信号，拨动RC遥控器飞机不会做出反应。\n    - Armed（绿色底色）：飞行器已经ARM，此时所有舵面、电机均可通过飞行控制器控制，飞机可以对RC遥控器的信号做出响应。\n    - [Manual](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#manual-mode-fw)（绿色底色）：飞行器已经ARM，飞行模式为手动飞行模式，想必熟读PX4 User Guide的你对这些词并不陌生（[**PX4 Flight Modes Overview**](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#px4-flight-modes-overview)）。手动模式即没有自稳，RC信号直接控制飞机（在你所设置的pwm maxmimun minimun参数下）。\n    - [Stabilized](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#stabilized-mode-fw)（绿色底色）：飞行器已经ARM，飞行模式为自稳飞行模式，飞行器会自动稳定飞机，此时的体验更像打游戏（）。\n    - Mission（绿色底色）：飞行器已经ARM，飞行模式为任务飞行模式，飞行器会自动飞行前往设置的航点、航线，RC遥控器输入将不起作用，当任务结束后，飞行器默认会返回出发点上空100m盘旋（是否返回、盘旋高度、盘旋半径均可修改参数），如果飞手想要接管飞机，则需通过遥控器上的拨杆更改飞行模式到Manual或Stabilized，以结束Mission并夺回飞机控制权，当然，一般进行到这步不是结束就是结束了 : )\n    - Hold（绿色底色）：飞行器已经ARM，飞行模式为保持飞行模式，飞行器会在当前位置上空盘旋，盘旋半径和高度可以通过参数自行设置。\n    - Lost Connection（红色底色）：可能是这个名，造成这种状态有两种可能：\n      - 一是工作结束，收拾下班；\n      - 二是工作结束，收拾下班：\n        - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102100.png)\n\n  - 依次点击左上角文字部分->ARM->滑动来arm（解锁）飞机\n\n    - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102108.png)\n\n    - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102116.png)\n\n    - 如你所见Not Ready的情况下无法Arm飞机，具体原因也已给出（check orientations and recalibrate），这是因为我的gps是随便放置的，没有按照正常的安装方向向前摆放。更多and更详细的信息可以在这里看\n\n      ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102124.png)\n","source":"_posts/【飞控】01-安装、接线、连接地面站.md","raw":"---\ntitle: 【飞控】01_安装、接线、连接地面站\ndate: 2023-07-03 18:48:51\ntags: \n  - px4\n  - 飞控\n  - qgc\ncategories: \n  - 南工御风\ntop_img: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/elysia05.jpg\ncover: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png\n---\n\n# 一. 安装、接线、连接地面站\n\n***PX4官网UserGuide地址（\\***[***https://docs.px4.io/v1.12/en/\\***](https://docs.px4.io/v1.12/en/)***），强烈建议细读几遍\\***\n\n## 接线\n\n详见[PX4官网（以我们去年用的CUAV V5+为例）](https://docs.px4.io/v1.12/en/assembly/quick_start_cuav_v5_plus.html)\n\n或者[CUAV官网（以我们去年用的CUAV V5+为例）](https://doc.cuav.net/flight-controller/v5-autopilot/en/quick-start/quick-start-v5+.html)\n\n或者去年的比赛机（物理观察）\n\n- ![箱子](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101925.png)\n- ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png)\n\n完成接线后，给飞行控制器（以下统称“飞控”）通电（使用3s锂电池或usb数据线），其大致情况应该如上图所示，飞控蓝灯闪烁、GPS蓝灯闪烁、数传绿灯慢闪（未连接），接下来可以连接地面站。\n\n## QGroundControl地面站（简称QGC）\n\n- PX4官方推荐地面站[QGroundControl](http://qgroundcontrol.com/)，下载安装对应你的操作系统的QGC。\n\n- 打开未连接飞机时如图\n\n  - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102022.png)\n\n- 连接飞机后如图\n\n  - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102045.png)\n\n  - 其中，左上角“Not Ready”代表飞行器现在的状态即未准备好，飞行器的状态按经验以及实操顺序可列为以下几种：\n\n    - Not Ready（黄色底色）：飞行器未准备就绪，有的操作未完成（比如RC遥控器未连接、飞机姿态错误（未水平放置）、空速管故障、GPS未搜到星等），无法ARM飞机。如你所见GPS未搜到星被打上了删除线，这是因为评价飞机是否Ready的参数是你可以调的，熟读参数表的你想必已经找到了(https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander)（影响是否Ready的参数不止这些，如果你遇到了某些参数设置了但是没有达到预想的效果，请自行Google）\n    - Ready To Fly（绿色底色）：飞行器已准备就绪，可以ARM。在ARM前，舵机可能会通电保持固定姿态（与固件版本有关），电机可能在你最开始上电时进行自我检测，但是均不会收到任何输入信号，拨动RC遥控器飞机不会做出反应。\n    - Armed（绿色底色）：飞行器已经ARM，此时所有舵面、电机均可通过飞行控制器控制，飞机可以对RC遥控器的信号做出响应。\n    - [Manual](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#manual-mode-fw)（绿色底色）：飞行器已经ARM，飞行模式为手动飞行模式，想必熟读PX4 User Guide的你对这些词并不陌生（[**PX4 Flight Modes Overview**](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#px4-flight-modes-overview)）。手动模式即没有自稳，RC信号直接控制飞机（在你所设置的pwm maxmimun minimun参数下）。\n    - [Stabilized](https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#stabilized-mode-fw)（绿色底色）：飞行器已经ARM，飞行模式为自稳飞行模式，飞行器会自动稳定飞机，此时的体验更像打游戏（）。\n    - Mission（绿色底色）：飞行器已经ARM，飞行模式为任务飞行模式，飞行器会自动飞行前往设置的航点、航线，RC遥控器输入将不起作用，当任务结束后，飞行器默认会返回出发点上空100m盘旋（是否返回、盘旋高度、盘旋半径均可修改参数），如果飞手想要接管飞机，则需通过遥控器上的拨杆更改飞行模式到Manual或Stabilized，以结束Mission并夺回飞机控制权，当然，一般进行到这步不是结束就是结束了 : )\n    - Hold（绿色底色）：飞行器已经ARM，飞行模式为保持飞行模式，飞行器会在当前位置上空盘旋，盘旋半径和高度可以通过参数自行设置。\n    - Lost Connection（红色底色）：可能是这个名，造成这种状态有两种可能：\n      - 一是工作结束，收拾下班；\n      - 二是工作结束，收拾下班：\n        - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102100.png)\n\n  - 依次点击左上角文字部分->ARM->滑动来arm（解锁）飞机\n\n    - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102108.png)\n\n    - ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102116.png)\n\n    - 如你所见Not Ready的情况下无法Arm飞机，具体原因也已给出（check orientations and recalibrate），这是因为我的gps是随便放置的，没有按照正常的安装方向向前摆放。更多and更详细的信息可以在这里看\n\n      ![](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102124.png)\n","slug":"【飞控】01-安装、接线、连接地面站","published":1,"updated":"2023-07-03T11:07:11.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljphk0v20007s0vn5qcxa8va","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><h1 id=\"一-安装-接线-连接地面站\"><a class=\"markdownIt-Anchor\" href=\"#一-安装-接线-连接地面站\"></a> 一. 安装、接线、连接地面站</h1>\n<p>*<strong>PX4官网UserGuide地址（*</strong><a href=\"https://docs.px4.io/v1.12/en/\">*<strong>https://docs.px4.io/v1.12/en/*</strong></a>*<strong>），强烈建议细读几遍*</strong></p>\n<h2 id=\"接线\"><a class=\"markdownIt-Anchor\" href=\"#接线\"></a> 接线</h2>\n<p>详见<a href=\"https://docs.px4.io/v1.12/en/assembly/quick_start_cuav_v5_plus.html\">PX4官网（以我们去年用的CUAV V5+为例）</a></p>\n<p>或者<a href=\"https://doc.cuav.net/flight-controller/v5-autopilot/en/quick-start/quick-start-v5+.html\">CUAV官网（以我们去年用的CUAV V5+为例）</a></p>\n<p>或者去年的比赛机（物理观察）</p>\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101925.png\" alt=\"箱子\" /></li>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png\" alt=\"\" /></li>\n</ul>\n<p>完成接线后，给飞行控制器（以下统称“飞控”）通电（使用3s锂电池或usb数据线），其大致情况应该如上图所示，飞控蓝灯闪烁、GPS蓝灯闪烁、数传绿灯慢闪（未连接），接下来可以连接地面站。</p>\n<h2 id=\"qgroundcontrol地面站简称qgc\"><a class=\"markdownIt-Anchor\" href=\"#qgroundcontrol地面站简称qgc\"></a> QGroundControl地面站（简称QGC）</h2>\n<ul>\n<li>\n<p>PX4官方推荐地面站<a href=\"http://qgroundcontrol.com/\">QGroundControl</a>，下载安装对应你的操作系统的QGC。</p>\n</li>\n<li>\n<p>打开未连接飞机时如图</p>\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102022.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>连接飞机后如图</p>\n<ul>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102045.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>其中，左上角“Not Ready”代表飞行器现在的状态即未准备好，飞行器的状态按经验以及实操顺序可列为以下几种：</p>\n<ul>\n<li>Not Ready（黄色底色）：飞行器未准备就绪，有的操作未完成（比如RC遥控器未连接、飞机姿态错误（未水平放置）、空速管故障、GPS未搜到星等），无法ARM飞机。如你所见GPS未搜到星被打上了删除线，这是因为评价飞机是否Ready的参数是你可以调的，熟读参数表的你想必已经找到了(<a href=\"https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander\">https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander</a>)（影响是否Ready的参数不止这些，如果你遇到了某些参数设置了但是没有达到预想的效果，请自行Google）</li>\n<li>Ready To Fly（绿色底色）：飞行器已准备就绪，可以ARM。在ARM前，舵机可能会通电保持固定姿态（与固件版本有关），电机可能在你最开始上电时进行自我检测，但是均不会收到任何输入信号，拨动RC遥控器飞机不会做出反应。</li>\n<li>Armed（绿色底色）：飞行器已经ARM，此时所有舵面、电机均可通过飞行控制器控制，飞机可以对RC遥控器的信号做出响应。</li>\n<li><a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#manual-mode-fw\">Manual</a>（绿色底色）：飞行器已经ARM，飞行模式为手动飞行模式，想必熟读PX4 User Guide的你对这些词并不陌生（<a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#px4-flight-modes-overview\"><strong>PX4 Flight Modes Overview</strong></a>）。手动模式即没有自稳，RC信号直接控制飞机（在你所设置的pwm maxmimun minimun参数下）。</li>\n<li><a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#stabilized-mode-fw\">Stabilized</a>（绿色底色）：飞行器已经ARM，飞行模式为自稳飞行模式，飞行器会自动稳定飞机，此时的体验更像打游戏（）。</li>\n<li>Mission（绿色底色）：飞行器已经ARM，飞行模式为任务飞行模式，飞行器会自动飞行前往设置的航点、航线，RC遥控器输入将不起作用，当任务结束后，飞行器默认会返回出发点上空100m盘旋（是否返回、盘旋高度、盘旋半径均可修改参数），如果飞手想要接管飞机，则需通过遥控器上的拨杆更改飞行模式到Manual或Stabilized，以结束Mission并夺回飞机控制权，当然，一般进行到这步不是结束就是结束了 : )</li>\n<li>Hold（绿色底色）：飞行器已经ARM，飞行模式为保持飞行模式，飞行器会在当前位置上空盘旋，盘旋半径和高度可以通过参数自行设置。</li>\n<li>Lost Connection（红色底色）：可能是这个名，造成这种状态有两种可能：\n<ul>\n<li>一是工作结束，收拾下班；</li>\n<li>二是工作结束，收拾下班：\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102100.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>依次点击左上角文字部分-&gt;ARM-&gt;滑动来arm（解锁）飞机</p>\n<ul>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102108.png\" alt=\"\" /></p>\n</li>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102116.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>如你所见Not Ready的情况下无法Arm飞机，具体原因也已给出（check orientations and recalibrate），这是因为我的gps是随便放置的，没有按照正常的安装方向向前摆放。更多and更详细的信息可以在这里看</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102124.png\" alt=\"\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<h1 id=\"一-安装-接线-连接地面站\"><a class=\"markdownIt-Anchor\" href=\"#一-安装-接线-连接地面站\"></a> 一. 安装、接线、连接地面站</h1>\n<p>*<strong>PX4官网UserGuide地址（*</strong><a href=\"https://docs.px4.io/v1.12/en/\">*<strong>https://docs.px4.io/v1.12/en/*</strong></a>*<strong>），强烈建议细读几遍*</strong></p>\n<h2 id=\"接线\"><a class=\"markdownIt-Anchor\" href=\"#接线\"></a> 接线</h2>\n<p>详见<a href=\"https://docs.px4.io/v1.12/en/assembly/quick_start_cuav_v5_plus.html\">PX4官网（以我们去年用的CUAV V5+为例）</a></p>\n<p>或者<a href=\"https://doc.cuav.net/flight-controller/v5-autopilot/en/quick-start/quick-start-v5+.html\">CUAV官网（以我们去年用的CUAV V5+为例）</a></p>\n<p>或者去年的比赛机（物理观察）</p>\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101925.png\" alt=\"箱子\" /></li>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517101949.png\" alt=\"\" /></li>\n</ul>\n<p>完成接线后，给飞行控制器（以下统称“飞控”）通电（使用3s锂电池或usb数据线），其大致情况应该如上图所示，飞控蓝灯闪烁、GPS蓝灯闪烁、数传绿灯慢闪（未连接），接下来可以连接地面站。</p>\n<h2 id=\"qgroundcontrol地面站简称qgc\"><a class=\"markdownIt-Anchor\" href=\"#qgroundcontrol地面站简称qgc\"></a> QGroundControl地面站（简称QGC）</h2>\n<ul>\n<li>\n<p>PX4官方推荐地面站<a href=\"http://qgroundcontrol.com/\">QGroundControl</a>，下载安装对应你的操作系统的QGC。</p>\n</li>\n<li>\n<p>打开未连接飞机时如图</p>\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102022.png\" alt=\"\" /></li>\n</ul>\n</li>\n<li>\n<p>连接飞机后如图</p>\n<ul>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102045.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>其中，左上角“Not Ready”代表飞行器现在的状态即未准备好，飞行器的状态按经验以及实操顺序可列为以下几种：</p>\n<ul>\n<li>Not Ready（黄色底色）：飞行器未准备就绪，有的操作未完成（比如RC遥控器未连接、飞机姿态错误（未水平放置）、空速管故障、GPS未搜到星等），无法ARM飞机。如你所见GPS未搜到星被打上了删除线，这是因为评价飞机是否Ready的参数是你可以调的，熟读参数表的你想必已经找到了(<a href=\"https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander\">https://docs.px4.io/v1.12/en/advanced_config/parameter_reference.html#commander</a>)（影响是否Ready的参数不止这些，如果你遇到了某些参数设置了但是没有达到预想的效果，请自行Google）</li>\n<li>Ready To Fly（绿色底色）：飞行器已准备就绪，可以ARM。在ARM前，舵机可能会通电保持固定姿态（与固件版本有关），电机可能在你最开始上电时进行自我检测，但是均不会收到任何输入信号，拨动RC遥控器飞机不会做出反应。</li>\n<li>Armed（绿色底色）：飞行器已经ARM，此时所有舵面、电机均可通过飞行控制器控制，飞机可以对RC遥控器的信号做出响应。</li>\n<li><a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#manual-mode-fw\">Manual</a>（绿色底色）：飞行器已经ARM，飞行模式为手动飞行模式，想必熟读PX4 User Guide的你对这些词并不陌生（<a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#px4-flight-modes-overview\"><strong>PX4 Flight Modes Overview</strong></a>）。手动模式即没有自稳，RC信号直接控制飞机（在你所设置的pwm maxmimun minimun参数下）。</li>\n<li><a href=\"https://docs.px4.io/v1.12/en/getting_started/flight_modes.html#stabilized-mode-fw\">Stabilized</a>（绿色底色）：飞行器已经ARM，飞行模式为自稳飞行模式，飞行器会自动稳定飞机，此时的体验更像打游戏（）。</li>\n<li>Mission（绿色底色）：飞行器已经ARM，飞行模式为任务飞行模式，飞行器会自动飞行前往设置的航点、航线，RC遥控器输入将不起作用，当任务结束后，飞行器默认会返回出发点上空100m盘旋（是否返回、盘旋高度、盘旋半径均可修改参数），如果飞手想要接管飞机，则需通过遥控器上的拨杆更改飞行模式到Manual或Stabilized，以结束Mission并夺回飞机控制权，当然，一般进行到这步不是结束就是结束了 : )</li>\n<li>Hold（绿色底色）：飞行器已经ARM，飞行模式为保持飞行模式，飞行器会在当前位置上空盘旋，盘旋半径和高度可以通过参数自行设置。</li>\n<li>Lost Connection（红色底色）：可能是这个名，造成这种状态有两种可能：\n<ul>\n<li>一是工作结束，收拾下班；</li>\n<li>二是工作结束，收拾下班：\n<ul>\n<li><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102100.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>依次点击左上角文字部分-&gt;ARM-&gt;滑动来arm（解锁）飞机</p>\n<ul>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102108.png\" alt=\"\" /></p>\n</li>\n<li>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102116.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>如你所见Not Ready的情况下无法Arm飞机，具体原因也已给出（check orientations and recalibrate），这是因为我的gps是随便放置的，没有按照正常的安装方向向前摆放。更多and更详细的信息可以在这里看</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/20230517102124.png\" alt=\"\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"部署code-server让你在iPad上使用VScode","date":"2022-12-06T16:58:55.000Z","top_img":"https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/dd3cd1e566b75ad5d6622b7c67229988b12a2060.jpg&default=https://article.biliimg.com/bfs/article/dd3cd1e566b75ad5d6622b7c67229988b12a2060.jpg","cover":"https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png","_content":"\n> 所需材料: 一个可用的云服务器, iPad(任何能使用浏览器的电子设备)\n\n# 在服务器部署code-server\n\n1. 以亚马逊aws免费服务器为例 (能白嫖为什么要花钱呢), 首先新建一个实例, 系统选择ubuntu\n\n   ![image-20221207010335588](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010335588.png)\n\n   全部选择免费的即可\n\n   ![image-20221207010436495](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010436495.png)\n\n2. 密钥对选项中, 如果没有密钥则点击创建新的密钥对, 记得保存密钥对文件. 创建完后选择新创建的密钥对. \n\n   ![image-20221207010623627](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010623627.png)\n\n3. 网络设置先跳过, 后面在搞. \n\n4. 配置存储可以拉到30g(免费额度)\n\n   ![image-20221207010725899](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010725899.png)\n\n5. 然后点击右下角启动示例即可\n\n   ![image-20221207010758887](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010758887.png)\n\n6. 返回实例界面, 等待实例状态变为正在运行\n\n   ![image-20221207010842108](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010842108.png)\n\n7. 选择该实例, 点击右上角的 连接 \n\n   ![image-20221207010940039](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010940039.png)\n\n8. 用户名使用默认的\"ubuntu\"即可, 然后点击连接\n\n   ![image-20221207011016491](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011016491.png)\n\n9. 连接成功后, 首先设置root密码\n\n   ```bash\n   sudo passwd root\n   ```\n\n   设置服务器ssh允许密码连接\n\n   ```bash\n   sudo vim /etc/ssh/sshd_config \n   ```\n\n   把PermitRootLogin 改为 yes\n\n   ![image-20221207012222270](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012222270.png)\n\n   把PasswdAuthentication 改为 yes\n\n   ![image-20221207012343695](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012343695.png)\n\n   保存退出\n\n   ![image-20221207012359085](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012359085.png)\n\n10. 重启ssh服务\n\n    ```bash\n    sudo service ssh restart\n    ```\n\n    \n\n11. 设置其安全组, 点击该实例, 在安全选项中, 点击安全组\n\n    ![image-20221207011243835](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011243835.png)\n\n12. 点击编辑入站规则\n\n    ![image-20221207011342082](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011342082.png)\n\n    然后按照如下配置即可\n\n    ![image-20221207011407437](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011407437.png)\n\n    配置完成后点击保存规则. \n\n13. 现在可以试试能否ping通你的服务器公网ip\n\n    ![image-20221207014404931](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014404931.png)\n\n    可以看出已经ping通了\n\n14. 现在你可以用你的任意ssh工具连接上服务器了, 这里用tabby举例\n\n    ![image-20221207014543910](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014543910.png)\n\n14. 然后你就可以在这里部署你的code-server了, 首先切换到root用户\n\n    ```bash\n    su - root\n    ```\n\n    运行一键安装脚本\n\n    ```bash\n    curl -fsSL https://code-server.dev/install.sh | sh\n    ```\n\n    安装成功后使用以下命令来启动code-server\n\n    ```bash\n    export PASSWORD=\"123456\" && code-server --port 8888 --host 0.0.0.0\n    ```\n\n    > 注意这里的 --port 8888已经在设置安全组时开启, 不然后面会无法连接.  \n\n    ![image-20221207013721614](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207013721614.png)\n\n    如图, code-server已启动成功\n\n# 使用iPad连接code-server\n\n15. 打开你的iPad(或者其他任意可使用浏览器的设备), 打开safari转到 http://你的公网ip:8888 , 进入该页面则说明已经连接成功. \n\n    ![image-20221207014042210](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014042210.png)\n\n16. 输入第14步设置的PASSWORD即可进入主界面\n\n    ![image-20221207014215268](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png)\n\n    可以像电脑vscode一样安装插件, 极大的解决了iPad coding难的问题. \n","source":"_posts/部署code-server让你在iPad上使用VScode.md","raw":"---\ntitle: 部署code-server让你在iPad上使用VScode\ndate: 2022-12-07 00:58:55\ntags: [云服务器, code-server]\ntop_img: https://images.weserv.nl/?url=https://article.biliimg.com/bfs/article/dd3cd1e566b75ad5d6622b7c67229988b12a2060.jpg&default=https://article.biliimg.com/bfs/article/dd3cd1e566b75ad5d6622b7c67229988b12a2060.jpg\ncover: https://images.weserv.nl/?url=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png&default=https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png\n---\n\n> 所需材料: 一个可用的云服务器, iPad(任何能使用浏览器的电子设备)\n\n# 在服务器部署code-server\n\n1. 以亚马逊aws免费服务器为例 (能白嫖为什么要花钱呢), 首先新建一个实例, 系统选择ubuntu\n\n   ![image-20221207010335588](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010335588.png)\n\n   全部选择免费的即可\n\n   ![image-20221207010436495](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010436495.png)\n\n2. 密钥对选项中, 如果没有密钥则点击创建新的密钥对, 记得保存密钥对文件. 创建完后选择新创建的密钥对. \n\n   ![image-20221207010623627](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010623627.png)\n\n3. 网络设置先跳过, 后面在搞. \n\n4. 配置存储可以拉到30g(免费额度)\n\n   ![image-20221207010725899](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010725899.png)\n\n5. 然后点击右下角启动示例即可\n\n   ![image-20221207010758887](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010758887.png)\n\n6. 返回实例界面, 等待实例状态变为正在运行\n\n   ![image-20221207010842108](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010842108.png)\n\n7. 选择该实例, 点击右上角的 连接 \n\n   ![image-20221207010940039](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010940039.png)\n\n8. 用户名使用默认的\"ubuntu\"即可, 然后点击连接\n\n   ![image-20221207011016491](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011016491.png)\n\n9. 连接成功后, 首先设置root密码\n\n   ```bash\n   sudo passwd root\n   ```\n\n   设置服务器ssh允许密码连接\n\n   ```bash\n   sudo vim /etc/ssh/sshd_config \n   ```\n\n   把PermitRootLogin 改为 yes\n\n   ![image-20221207012222270](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012222270.png)\n\n   把PasswdAuthentication 改为 yes\n\n   ![image-20221207012343695](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012343695.png)\n\n   保存退出\n\n   ![image-20221207012359085](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012359085.png)\n\n10. 重启ssh服务\n\n    ```bash\n    sudo service ssh restart\n    ```\n\n    \n\n11. 设置其安全组, 点击该实例, 在安全选项中, 点击安全组\n\n    ![image-20221207011243835](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011243835.png)\n\n12. 点击编辑入站规则\n\n    ![image-20221207011342082](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011342082.png)\n\n    然后按照如下配置即可\n\n    ![image-20221207011407437](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011407437.png)\n\n    配置完成后点击保存规则. \n\n13. 现在可以试试能否ping通你的服务器公网ip\n\n    ![image-20221207014404931](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014404931.png)\n\n    可以看出已经ping通了\n\n14. 现在你可以用你的任意ssh工具连接上服务器了, 这里用tabby举例\n\n    ![image-20221207014543910](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014543910.png)\n\n14. 然后你就可以在这里部署你的code-server了, 首先切换到root用户\n\n    ```bash\n    su - root\n    ```\n\n    运行一键安装脚本\n\n    ```bash\n    curl -fsSL https://code-server.dev/install.sh | sh\n    ```\n\n    安装成功后使用以下命令来启动code-server\n\n    ```bash\n    export PASSWORD=\"123456\" && code-server --port 8888 --host 0.0.0.0\n    ```\n\n    > 注意这里的 --port 8888已经在设置安全组时开启, 不然后面会无法连接.  \n\n    ![image-20221207013721614](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207013721614.png)\n\n    如图, code-server已启动成功\n\n# 使用iPad连接code-server\n\n15. 打开你的iPad(或者其他任意可使用浏览器的设备), 打开safari转到 http://你的公网ip:8888 , 进入该页面则说明已经连接成功. \n\n    ![image-20221207014042210](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014042210.png)\n\n16. 输入第14步设置的PASSWORD即可进入主界面\n\n    ![image-20221207014215268](https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png)\n\n    可以像电脑vscode一样安装插件, 极大的解决了iPad coding难的问题. \n","slug":"部署code-server让你在iPad上使用VScode","published":1,"updated":"2023-07-03T11:08:17.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cljphk0v30008s0vn8kv7ft26","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><blockquote>\n<p>所需材料: 一个可用的云服务器, iPad(任何能使用浏览器的电子设备)</p>\n</blockquote>\n<h1 id=\"在服务器部署code-server\"><a class=\"markdownIt-Anchor\" href=\"#在服务器部署code-server\"></a> 在服务器部署code-server</h1>\n<ol>\n<li>\n<p>以亚马逊aws免费服务器为例 (能白嫖为什么要花钱呢), 首先新建一个实例, 系统选择ubuntu</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010335588.png\" alt=\"image-20221207010335588\" /></p>\n<p>全部选择免费的即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010436495.png\" alt=\"image-20221207010436495\" /></p>\n</li>\n<li>\n<p>密钥对选项中, 如果没有密钥则点击创建新的密钥对, 记得保存密钥对文件. 创建完后选择新创建的密钥对.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010623627.png\" alt=\"image-20221207010623627\" /></p>\n</li>\n<li>\n<p>网络设置先跳过, 后面在搞.</p>\n</li>\n<li>\n<p>配置存储可以拉到30g(免费额度)</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010725899.png\" alt=\"image-20221207010725899\" /></p>\n</li>\n<li>\n<p>然后点击右下角启动示例即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010758887.png\" alt=\"image-20221207010758887\" /></p>\n</li>\n<li>\n<p>返回实例界面, 等待实例状态变为正在运行</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010842108.png\" alt=\"image-20221207010842108\" /></p>\n</li>\n<li>\n<p>选择该实例, 点击右上角的 连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010940039.png\" alt=\"image-20221207010940039\" /></p>\n</li>\n<li>\n<p>用户名使用默认的&quot;ubuntu&quot;即可, 然后点击连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011016491.png\" alt=\"image-20221207011016491\" /></p>\n</li>\n<li>\n<p>连接成功后, 首先设置root密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<p>设置服务器ssh允许密码连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/ssh/sshd_config </span><br></pre></td></tr></table></figure>\n<p>把PermitRootLogin 改为 yes</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012222270.png\" alt=\"image-20221207012222270\" /></p>\n<p>把PasswdAuthentication 改为 yes</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012343695.png\" alt=\"image-20221207012343695\" /></p>\n<p>保存退出</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012359085.png\" alt=\"image-20221207012359085\" /></p>\n</li>\n<li>\n<p>重启ssh服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service ssh restart</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>设置其安全组, 点击该实例, 在安全选项中, 点击安全组</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011243835.png\" alt=\"image-20221207011243835\" /></p>\n</li>\n<li>\n<p>点击编辑入站规则</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011342082.png\" alt=\"image-20221207011342082\" /></p>\n<p>然后按照如下配置即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011407437.png\" alt=\"image-20221207011407437\" /></p>\n<p>配置完成后点击保存规则.</p>\n</li>\n<li>\n<p>现在可以试试能否ping通你的服务器公网ip</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014404931.png\" alt=\"image-20221207014404931\" /></p>\n<p>可以看出已经ping通了</p>\n</li>\n<li>\n<p>现在你可以用你的任意ssh工具连接上服务器了, 这里用tabby举例</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014543910.png\" alt=\"image-20221207014543910\" /></p>\n</li>\n<li>\n<p>然后你就可以在这里部署你的code-server了, 首先切换到root用户</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n<p>运行一键安装脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://code-server.dev/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>安装成功后使用以下命令来启动code-server</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PASSWORD=<span class=\"string\">&quot;123456&quot;</span> &amp;&amp; code-server --port 8888 --host 0.0.0.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意这里的 --port 8888已经在设置安全组时开启, 不然后面会无法连接.</p>\n</blockquote>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207013721614.png\" alt=\"image-20221207013721614\" /></p>\n<p>如图, code-server已启动成功</p>\n</li>\n</ol>\n<h1 id=\"使用ipad连接code-server\"><a class=\"markdownIt-Anchor\" href=\"#使用ipad连接code-server\"></a> 使用iPad连接code-server</h1>\n<ol start=\"15\">\n<li>\n<p>打开你的iPad(或者其他任意可使用浏览器的设备), 打开safari转到 <a href=\"http://xn--ip-0p3cr1ft42fjbl:8888\">http://你的公网ip:8888</a> , 进入该页面则说明已经连接成功.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014042210.png\" alt=\"image-20221207014042210\" /></p>\n</li>\n<li>\n<p>输入第14步设置的PASSWORD即可进入主界面</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png\" alt=\"image-20221207014215268\" /></p>\n<p>可以像电脑vscode一样安装插件, 极大的解决了iPad coding难的问题.</p>\n</li>\n</ol>\n","site":{"data":{}},"cover_type":"img","excerpt":"","more":"<blockquote>\n<p>所需材料: 一个可用的云服务器, iPad(任何能使用浏览器的电子设备)</p>\n</blockquote>\n<h1 id=\"在服务器部署code-server\"><a class=\"markdownIt-Anchor\" href=\"#在服务器部署code-server\"></a> 在服务器部署code-server</h1>\n<ol>\n<li>\n<p>以亚马逊aws免费服务器为例 (能白嫖为什么要花钱呢), 首先新建一个实例, 系统选择ubuntu</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010335588.png\" alt=\"image-20221207010335588\" /></p>\n<p>全部选择免费的即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010436495.png\" alt=\"image-20221207010436495\" /></p>\n</li>\n<li>\n<p>密钥对选项中, 如果没有密钥则点击创建新的密钥对, 记得保存密钥对文件. 创建完后选择新创建的密钥对.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010623627.png\" alt=\"image-20221207010623627\" /></p>\n</li>\n<li>\n<p>网络设置先跳过, 后面在搞.</p>\n</li>\n<li>\n<p>配置存储可以拉到30g(免费额度)</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010725899.png\" alt=\"image-20221207010725899\" /></p>\n</li>\n<li>\n<p>然后点击右下角启动示例即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010758887.png\" alt=\"image-20221207010758887\" /></p>\n</li>\n<li>\n<p>返回实例界面, 等待实例状态变为正在运行</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010842108.png\" alt=\"image-20221207010842108\" /></p>\n</li>\n<li>\n<p>选择该实例, 点击右上角的 连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207010940039.png\" alt=\"image-20221207010940039\" /></p>\n</li>\n<li>\n<p>用户名使用默认的&quot;ubuntu&quot;即可, 然后点击连接</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011016491.png\" alt=\"image-20221207011016491\" /></p>\n</li>\n<li>\n<p>连接成功后, 首先设置root密码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd root</span><br></pre></td></tr></table></figure>\n<p>设置服务器ssh允许密码连接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/ssh/sshd_config </span><br></pre></td></tr></table></figure>\n<p>把PermitRootLogin 改为 yes</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012222270.png\" alt=\"image-20221207012222270\" /></p>\n<p>把PasswdAuthentication 改为 yes</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012343695.png\" alt=\"image-20221207012343695\" /></p>\n<p>保存退出</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207012359085.png\" alt=\"image-20221207012359085\" /></p>\n</li>\n<li>\n<p>重启ssh服务</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service ssh restart</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>设置其安全组, 点击该实例, 在安全选项中, 点击安全组</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011243835.png\" alt=\"image-20221207011243835\" /></p>\n</li>\n<li>\n<p>点击编辑入站规则</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011342082.png\" alt=\"image-20221207011342082\" /></p>\n<p>然后按照如下配置即可</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207011407437.png\" alt=\"image-20221207011407437\" /></p>\n<p>配置完成后点击保存规则.</p>\n</li>\n<li>\n<p>现在可以试试能否ping通你的服务器公网ip</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014404931.png\" alt=\"image-20221207014404931\" /></p>\n<p>可以看出已经ping通了</p>\n</li>\n<li>\n<p>现在你可以用你的任意ssh工具连接上服务器了, 这里用tabby举例</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014543910.png\" alt=\"image-20221207014543910\" /></p>\n</li>\n<li>\n<p>然后你就可以在这里部署你的code-server了, 首先切换到root用户</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su - root</span><br></pre></td></tr></table></figure>\n<p>运行一键安装脚本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://code-server.dev/install.sh | sh</span><br></pre></td></tr></table></figure>\n<p>安装成功后使用以下命令来启动code-server</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PASSWORD=<span class=\"string\">&quot;123456&quot;</span> &amp;&amp; code-server --port 8888 --host 0.0.0.0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意这里的 --port 8888已经在设置安全组时开启, 不然后面会无法连接.</p>\n</blockquote>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207013721614.png\" alt=\"image-20221207013721614\" /></p>\n<p>如图, code-server已启动成功</p>\n</li>\n</ol>\n<h1 id=\"使用ipad连接code-server\"><a class=\"markdownIt-Anchor\" href=\"#使用ipad连接code-server\"></a> 使用iPad连接code-server</h1>\n<ol start=\"15\">\n<li>\n<p>打开你的iPad(或者其他任意可使用浏览器的设备), 打开safari转到 <a href=\"http://xn--ip-0p3cr1ft42fjbl:8888\">http://你的公网ip:8888</a> , 进入该页面则说明已经连接成功.</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014042210.png\" alt=\"image-20221207014042210\" /></p>\n</li>\n<li>\n<p>输入第14步设置的PASSWORD即可进入主界面</p>\n<p><img src=\"https://hanhan3344-tx-bk-1313563340.cos.ap-guangzhou.myqcloud.com/typora/image-20221207014215268.png\" alt=\"image-20221207014215268\" /></p>\n<p>可以像电脑vscode一样安装插件, 极大的解决了iPad coding难的问题.</p>\n</li>\n</ol>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cljphk0uv0001s0vn65754oqa","category_id":"cljphk0v00004s0vn1u73g1ro","_id":"cljphk0v5000cs0vna0uh9s64"},{"post_id":"cljphk0uz0003s0vnhhocfya9","category_id":"cljphk0v00004s0vn1u73g1ro","_id":"cljphk0v6000es0vn4my4dyh4"},{"post_id":"cljphk0v20007s0vn5qcxa8va","category_id":"cljphk0v00004s0vn1u73g1ro","_id":"cljphk0v6000hs0vnb5e5662q"}],"PostTag":[{"post_id":"cljphk0uv0001s0vn65754oqa","tag_id":"cljphk0v10005s0vn5rav34cr","_id":"cljphk0v6000gs0vna5ex7ak6"},{"post_id":"cljphk0uv0001s0vn65754oqa","tag_id":"cljphk0v4000as0vn8bzxairn","_id":"cljphk0v6000is0vn753xh402"},{"post_id":"cljphk0uv0001s0vn65754oqa","tag_id":"cljphk0v5000ds0vn4xp4etvs","_id":"cljphk0v7000ks0vnbnt48a0y"},{"post_id":"cljphk0uz0003s0vnhhocfya9","tag_id":"cljphk0v10005s0vn5rav34cr","_id":"cljphk0v8000os0vn2u6z5ljf"},{"post_id":"cljphk0uz0003s0vnhhocfya9","tag_id":"cljphk0v4000as0vn8bzxairn","_id":"cljphk0v8000ps0vn1rnk4uwv"},{"post_id":"cljphk0uz0003s0vnhhocfya9","tag_id":"cljphk0v7000ls0vnc5sm07ss","_id":"cljphk0v8000rs0vneti96rj6"},{"post_id":"cljphk0uz0003s0vnhhocfya9","tag_id":"cljphk0v7000ms0vn6eol0tg7","_id":"cljphk0v8000ss0vnfohu3hzc"},{"post_id":"cljphk0v20007s0vn5qcxa8va","tag_id":"cljphk0v10005s0vn5rav34cr","_id":"cljphk0v8000vs0vnfanv7rp2"},{"post_id":"cljphk0v20007s0vn5qcxa8va","tag_id":"cljphk0v8000qs0vn6cxg9fvj","_id":"cljphk0v9000ws0vn54gca5d5"},{"post_id":"cljphk0v20007s0vn5qcxa8va","tag_id":"cljphk0v8000ts0vnb3o40onl","_id":"cljphk0v9000ys0vn18d45829"},{"post_id":"cljphk0v30008s0vn8kv7ft26","tag_id":"cljphk0v8000us0vnhidi6juo","_id":"cljphk0v9000zs0vn2drn5bnn"},{"post_id":"cljphk0v30008s0vn8kv7ft26","tag_id":"cljphk0v9000xs0vngfcogh90","_id":"cljphk0v90010s0vn6uqmerco"}],"Tag":[{"name":"px4","_id":"cljphk0v10005s0vn5rav34cr"},{"name":"ubuntu","_id":"cljphk0v4000as0vn8bzxairn"},{"name":"docker","_id":"cljphk0v5000ds0vn4xp4etvs"},{"name":"mavsdk","_id":"cljphk0v7000ls0vnc5sm07ss"},{"name":"yolo","_id":"cljphk0v7000ms0vn6eol0tg7"},{"name":"飞控","_id":"cljphk0v8000qs0vn6cxg9fvj"},{"name":"qgc","_id":"cljphk0v8000ts0vnb3o40onl"},{"name":"云服务器","_id":"cljphk0v8000us0vnhidi6juo"},{"name":"code-server","_id":"cljphk0v9000xs0vngfcogh90"}]}}