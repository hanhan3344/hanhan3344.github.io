<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>部署code-server让你在iPad上使用VScode</title>
      <link href="/2022/12/07/%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8IPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/"/>
      <url>/2022/12/07/%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8IPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>所需材料: 一个可用的云服务器, iPad(任何能使用浏览器的电子设备)</p></blockquote><h1 id="在服务器部署code-server"><a class="markdownIt-Anchor" href="#在服务器部署code-server"></a> 在服务器部署code-server</h1><ol><li><p>以亚马逊aws免费服务器为例 (能白嫖为什么要花钱呢), 首先新建一个实例, 系统选择ubuntu</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010335588.png" alt="image-20221207010335588" /></p><p>全部选择免费的即可</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010436495.png" alt="image-20221207010436495" /></p></li><li><p>密钥对选项中, 如果没有密钥则点击创建新的密钥对, 记得保存密钥对文件. 创建完后选择新创建的密钥对.</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010623627.png" alt="image-20221207010623627" /></p></li><li><p>网络设置先跳过, 后面在搞.</p></li><li><p>配置存储可以拉到30g(免费额度)</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010725899.png" alt="image-20221207010725899" /></p></li><li><p>然后点击右下角启动示例即可</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010758887.png" alt="image-20221207010758887" /></p></li><li><p>返回实例界面, 等待实例状态变为正在运行</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010842108.png" alt="image-20221207010842108" /></p></li><li><p>选择该实例, 点击右上角的 连接</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207010940039.png" alt="image-20221207010940039" /></p></li><li><p>用户名使用默认的&quot;ubuntu&quot;即可, 然后点击连接</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207011016491.png" alt="image-20221207011016491" /></p></li><li><p>连接成功后, 首先设置root密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>设置服务器ssh允许密码连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config </span><br></pre></td></tr></table></figure><p>把PermitRootLogin 改为 yes</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207012222270.png" alt="image-20221207012222270" /></p><p>把PasswdAuthentication 改为 yes</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207012343695.png" alt="image-20221207012343695" /></p><p>保存退出</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207012359085.png" alt="image-20221207012359085" /></p></li><li><p>重启ssh服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure></li><li><p>设置其安全组, 点击该实例, 在安全选项中, 点击安全组</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207011243835.png" alt="image-20221207011243835" /></p></li><li><p>点击编辑入站规则</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207011342082.png" alt="image-20221207011342082" /></p><p>然后按照如下配置即可</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207011407437.png" alt="image-20221207011407437" /></p><p>配置完成后点击保存规则.</p></li><li><p>现在可以试试能否ping通你的服务器公网ip</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207014404931.png" alt="image-20221207014404931" /></p><p>可以看出已经ping通了</p></li><li><p>现在你可以用你的任意ssh工具连接上服务器了, 这里用tabby举例</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207014543910.png" alt="image-20221207014543910" /></p></li><li><p>然后你就可以在这里部署你的code-server了, 首先切换到root用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su - root</span><br></pre></td></tr></table></figure><p>运行一键安装脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://code-server.dev/install.sh | sh</span><br></pre></td></tr></table></figure><p>安装成功后使用以下命令来启动code-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PASSWORD=<span class="string">&quot;123456&quot;</span> &amp;&amp; code-server --port 8888 --host 0.0.0.0</span><br></pre></td></tr></table></figure><blockquote><p>注意这里的 --port 8888已经在设置安全组时开启, 不然后面会无法连接.</p></blockquote><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207013721614.png" alt="image-20221207013721614" /></p><p>如图, code-server已启动成功</p></li></ol><h1 id="使用ipad连接code-server"><a class="markdownIt-Anchor" href="#使用ipad连接code-server"></a> 使用iPad连接code-server</h1><ol start="15"><li><p>打开你的iPad(或者其他任意可使用浏览器的设备), 打开safari转到 <a href="http://xn--ip-0p3cr1ft42fjbl:8888">http://你的公网ip:8888</a> , 进入该页面则说明已经连接成功.</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207014042210.png" alt="image-20221207014042210" /></p></li><li><p>输入第14步设置的PASSWORD即可进入主界面</p><p><img src="%E9%83%A8%E7%BD%B2code-server%E8%AE%A9%E4%BD%A0%E5%9C%A8iPad%E4%B8%8A%E4%BD%BF%E7%94%A8VScode/image-20221207014215268.png" alt="image-20221207014215268" /></p><p>可以像电脑vscode一样安装插件, 极大的解决了iPad coding难的问题.</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 云服务器 </tag>
            
            <tag> code-server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PX4仿真环境的搭建</title>
      <link href="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="通过docker搭建比较推荐"><a class="markdownIt-Anchor" href="#通过docker搭建比较推荐"></a> 通过Docker搭建（比较推荐）</h1><blockquote><p>优点: 搭建方便, 可以轻松地在windows系统上运行, 开发与调试可以同平台进行</p><p>缺点: 性能损耗大(需要较高性能), gazebo模拟器没有图形化界面(其实无关紧要)</p><p>该教程适用于win11 (我自己的环境), win10自行探索</p></blockquote><h2 id="安装docker-desktop-for-windows"><a class="markdownIt-Anchor" href="#安装docker-desktop-for-windows"></a> 安装Docker Desktop for Windows</h2><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><ol><li>控制面板-程序和功能-启用或关闭Windows功能-勾选【适用于 Linux 的 Windows 子系统】和【虚拟机平台】这两项-立即重新启动；</li></ol><h3 id="安装wsl-2和ubuntu2004"><a class="markdownIt-Anchor" href="#安装wsl-2和ubuntu2004"></a> 安装WSL 2和Ubuntu20.04</h3><ol start="2"><li><p>点击<a href="https://learn.microsoft.com/en-us/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package">这里</a>前往微软官方文档Step 4, 下载<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">WSL2 Linux kernel update package for x64 machines</a>内核升级包并安装.</p></li><li><p>设置WSL版本为WSL 2. 打开 PowerShell , 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><p>查看可用ubuntu版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --online</span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install -d Ubuntu-20.04</span><br></pre></td></tr></table></figure><p>安装结束后设置你的Ubuntu用户名和密码, 即可关闭这个界面.</p></li></ol><h3 id="安装docker-desktop"><a class="markdownIt-Anchor" href="#安装docker-desktop"></a> 安装Docker Desktop</h3><ol start="4"><li><p><a href="https://www.docker.com/get-started/">官网下载</a>, 然后双击运行安装即可.</p></li><li><p>设置里勾选 基于WSL 2的引擎</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205215205499.png" class="" title="image-20221205215205499"></li><li><p>在PowerShell中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -l -v</span><br></pre></td></tr></table></figure><p>可以发现docker已经在运行</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205215448505.png" class="" title="image-20221205215448505"></li></ol><h2 id="安装px4仿真镜像"><a class="markdownIt-Anchor" href="#安装px4仿真镜像"></a> 安装PX4仿真镜像</h2><ol start="7"><li><p>打开Docker Desktop, 并搜索 <code>px4-gazebo-headless</code>, 点击Pull拉取镜像.</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205220006231.png" class="" title="image-20221205220006231"></li><li><p>拉取成功后, 即可打开Ubuntu20.04, 运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --<span class="built_in">rm</span> -it jonasvautherin/px4-gazebo-headless:latest -v plane </span><br></pre></td></tr></table></figure><blockquote><p>该命令为在Broadcast模式下运行sitl仿真, 并使用固定翼模型. 在此配置中, 容器将 MAVLink 发送到端口 14550（对于 QGC）和 14540（例如 MAVSDK）上的主机.</p></blockquote><p>看到如下画面, 即代表px4 SITL仿真已成功启动</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205220551641.png" class="" title="image-20221205220551641"><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205220525084.png" class="" title="image-20221205220525084"><p>打开QGC, 飞机即可自动连接</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205220648562.png" class="" title="image-20221205220648562"><p>终端输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown</span><br></pre></td></tr></table></figure><p>即可结束仿真</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205221320196.png" class="" title="image-20221205221320196"></li></ol><h1 id="自行搭建一般推荐"><a class="markdownIt-Anchor" href="#自行搭建一般推荐"></a> 自行搭建（一般推荐）</h1><blockquote><p>优点: 性能较好, gazebo模拟器有图形化界面(无关紧要), 可以增加Linux基础, 不用docker可以享受自己配环境的乐趣</p><p>缺点: 费时费力, 有docker为什么还要自己配环境()</p><p>此教程基于ubuntu20.04 (我的环境), 如果你是ubuntu18.04也可以参考<a href="https://github.com/Nangong-Yufeng/flight-control/blob/main/PX4%E7%9B%B8%E5%85%B3/PX4%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%8E%E5%BC%80%E5%8F%91%E8%BF%9B%E5%BA%A6.md">这里</a>. 或者你想<a href="https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#ubuntu-lts-debian-linux-%E7%9A%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83">跟着PX4官方文档搭建环境</a></p><p>搭建环境时建议使用一个好用的梯子(既然你能看到这个文章说明这应该不是问题)</p></blockquote><h2 id="ros安装"><a class="markdownIt-Anchor" href="#ros安装"></a> ROS安装</h2><ol><li><p>首先安装ROS, 推荐使用<a href="https://fishros.org.cn/forum/topic/20/%E5%B0%8F%E9%B1%BC%E7%9A%84%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E7%B3%BB%E5%88%97?lang=zh-CN">FishRos</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; . fishros </span><br></pre></td></tr></table></figure><p>分别选择1, 3, 4 (配置环境需要用到的)</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221205222351336.png" class="" title="image-20221205222351336"></li></ol><h2 id="px4安装"><a class="markdownIt-Anchor" href="#px4安装"></a> PX4安装</h2><ol start="2"><li><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ninja-build exiftool ninja-build protobuf-compiler libeigen3-dev genromfs xmlstarlet libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python-pip python3-pip</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install pandas jinja2 pyserial cerberus pyulog==0.7.0 numpy toml pyquaternion empy pyyaml </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install packaging numpy empy toml pyyaml jinja2 pyargparse</span><br></pre></td></tr></table></figure></li><li><p>创建工作空间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-catkin-tools</span><br><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/src</span><br><span class="line"><span class="built_in">mkdir</span> -p ~/catkin_ws/scripts</span><br><span class="line"><span class="built_in">cd</span> catkin_ws &amp;&amp; catkin init <span class="comment"># 使用catkin_make话，则为cd catkin_ws/src &amp;&amp; catkin_init_workspace</span></span><br></pre></td></tr></table></figure></li><li><p>安装MAVROS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ros-noetic-mavros ros-noetic-mavros-extras   </span><br><span class="line">wget https://gitee.com/robin_shaun/XTDrone/raw/master/sitl_config/mavros/install_geographiclib_datasets.sh</span><br><span class="line">sudo <span class="built_in">chmod</span> a+x ./install_geographiclib_datasets.sh</span><br><span class="line">sudo ./install_geographiclib_datasets.sh <span class="comment">#这步需要装一段时间,请耐心等待PX4配置</span></span><br></pre></td></tr></table></figure></li><li><p>安装PX4</p><p>推荐<a href="https://docs.px4.io/main/zh/dev_setup/dev_env_linux_ubuntu.html#%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">官方脚本</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PX4/PX4-Autopilot.git --recursive</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ./PX4-Autopilot/Tools/setup/ubuntu.sh</span><br></pre></td></tr></table></figure><p>然后重启电脑</p></li><li><p>环境配置</p><p>打开一个终端, 输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p>将下面代码粘贴到里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/catkin_ws/devel/setup.bash</span><br><span class="line"><span class="built_in">source</span> ~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/setup_gazebo.bash ~/catkin_ws/PX4-Autopilot/ ~/catkin_ws/PX4-Autopilot/build/px4_sitl_default</span><br><span class="line"><span class="built_in">export</span> ROS_PACKAGE_PATH=<span class="variable">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot</span><br><span class="line"><span class="built_in">export</span> ROS_PACKAGE_PATH=<span class="variable">$ROS_PACKAGE_PATH</span>:~/catkin_ws/PX4-Autopilot/Tools/simulation/gazebo/sitl_gazebo</span><br></pre></td></tr></table></figure><p>保存退出后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>启动仿真</p><p>新打开一个终端, 前往~/catkin_ws/PX4-Autopilot目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/catkin_ws/PX4-Autopilot</span><br></pre></td></tr></table></figure><p>启动px4 sitl仿真, 机型为固定翼(plane)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make px4_sitl gazebo_plane</span><br></pre></td></tr></table></figure><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221206185806648.png" class="" title="image-20221206185806648"><p>当gazebo模拟器成功启动, 画面中出现小飞机, 终端出现类似这样的信息时</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221206185822088.png" class="" title="image-20221206185822088"><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221206185835038.png" class="" title="image-20221206185835038"><p>说明仿真启动成功, 此时控制台输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown</span><br></pre></td></tr></table></figure><p>即可退出仿真</p><img src="/2022/12/05/PX4%E4%BB%BF%E7%9C%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/image-20221206185924821.png" class="" title="image-20221206185924821"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 南工御风 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> px4 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/12/05/hello-world/"/>
      <url>/2022/12/05/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
